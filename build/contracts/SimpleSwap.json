{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLpTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountLinkToSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountUsdcToSupply",
          "type": "uint256"
        }
      ],
      "name": "initiatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountLpTokens",
          "type": "uint256"
        }
      ],
      "name": "supply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantitySoldToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountPurchasedToken",
          "type": "uint256"
        },
        {
          "internalType": "enum SimpleSwap.Token",
          "name": "tokenForSale",
          "type": "uint8"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAvailableLink",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAvailableUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLpTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountLpTokens",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
    "2": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "3": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
    "4": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "5": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "6": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
    "7": "contracts/SimpleSwap.sol"
  },
  "ast": {
    "absolutePath": "contracts/SimpleSwap.sol",
    "exportedSymbols": {
      "Context": [
        1745
      ],
      "ERC20": [
        1350
      ],
      "ERC20Burnable": [
        1412
      ],
      "IERC20": [
        37
      ],
      "LpSimpleSwap": [
        107
      ],
      "Ownable": [
        804
      ],
      "SafeMath": [
        1724
      ],
      "SimpleSwap": [
        700
      ]
    },
    "id": 701,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:7"
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 701,
        "sourceUnit": 1351,
        "src": "64:68:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "72:5:7",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 701,
        "sourceUnit": 1413,
        "src": "133:96:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "ERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "142:13:7",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 701,
        "sourceUnit": 1725,
        "src": "230:57:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 701,
        "sourceUnit": 805,
        "src": "288:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 16,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "384:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "403:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "383:35:7"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "437:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:6:7"
            },
            "scope": 37,
            "src": "366:77:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 27,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "470:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "486:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "505:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "469:51:7"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "539:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "538:6:7"
            },
            "scope": 37,
            "src": "448:97:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 36,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "567:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "584:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "566:33:7"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "618:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "617:6:7"
            },
            "scope": 37,
            "src": "550:74:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 701,
        "src": "343:283:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1350,
              "src": "654:5:7"
            },
            "id": 39,
            "nodeType": "InheritanceSpecifier",
            "src": "654:5:7"
          },
          {
            "baseName": {
              "id": 40,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1412,
              "src": "661:13:7"
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "661:13:7"
          }
        ],
        "contractDependencies": [
          1350,
          1412,
          1745,
          1823,
          1848
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 107,
        "linearizedBaseContracts": [
          107,
          1412,
          1350,
          1848,
          1823,
          1745
        ],
        "name": "LpSimpleSwap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "parentAddress",
            "nodeType": "VariableDeclaration",
            "scope": 107,
            "src": "681:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "681:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "785:47:7",
              "statements": [
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52,
                      "name": "parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "795:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53,
                      "name": "_parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "811:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "795:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "795:30:7"
                }
              ]
            },
            "id": 57,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4c702053696d706c652053776170",
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "750:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e9e47d5c7f8078662097dff493d3536a0ba18c3ab1fb6e2bbc948894dd2cce8c",
                      "typeString": "literal_string \"Lp Simple Swap\""
                    },
                    "value": "Lp Simple Swap"
                  },
                  {
                    "hexValue": "4c7053696d706c6553776170",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "768:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6b35169656204e01d2abb5f7d23acef2e5d3d23233abd96015328d2ba0c8b325",
                      "typeString": "literal_string \"LpSimpleSwap\""
                    },
                    "value": "LpSimpleSwap"
                  }
                ],
                "id": 50,
                "modifierName": {
                  "id": 47,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1350,
                  "src": "744:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "744:39:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_parentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "720:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "719:24:7"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "785:0:7"
            },
            "scope": 107,
            "src": "708:124:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "888:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 65,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "904:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "904:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 67,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "915:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "898:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "898:26:7"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62,
                "modifierName": {
                  "id": 61,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106,
                  "src": "877:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "877:10:7"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "852:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:18:7"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:7"
            },
            "scope": 107,
            "src": "838:93:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1372
            ],
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "996:46:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1015:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1015:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 82,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1026:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 79,
                      "name": "burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "1006:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:29:7"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77,
                "modifierName": {
                  "id": 76,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106,
                  "src": "985:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "985:10:7"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 75,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "976:8:7"
            },
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "951:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "950:18:7"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:7"
            },
            "scope": 107,
            "src": "937:105:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              879
            ],
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1105:25:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1122:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 91,
                  "id": 93,
                  "nodeType": "Return",
                  "src": "1115:8:7"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 88,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1080:8:7"
            },
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1065:2:7"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1098:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1097:7:7"
            },
            "scope": 107,
            "src": "1048:82:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "1156:64:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1174:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1174:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 100,
                          "name": "parentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1188:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1174:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1166:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1166:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:36:7"
                },
                {
                  "id": 104,
                  "nodeType": "PlaceholderStatement",
                  "src": "1212:1:7"
                }
              ]
            },
            "id": 106,
            "name": "onlyParent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1156:0:7"
            },
            "src": "1136:84:7",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 701,
        "src": "629:593:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 108,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 804,
              "src": "1248:7:7"
            },
            "id": 109,
            "nodeType": "InheritanceSpecifier",
            "src": "1248:7:7"
          }
        ],
        "contractDependencies": [
          107,
          804,
          1745
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 700,
        "linearizedBaseContracts": [
          700,
          804,
          1745
        ],
        "name": "SimpleSwap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 112,
            "libraryName": {
              "id": 110,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1724,
              "src": "1267:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1261:27:7",
            "typeName": {
              "id": 111,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1280:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "SimpleSwap.Token",
            "id": 115,
            "members": [
              {
                "id": 113,
                "name": "Link",
                "nodeType": "EnumValue",
                "src": "1305:4:7"
              },
              {
                "id": 114,
                "name": "USDC",
                "nodeType": "EnumValue",
                "src": "1311:4:7"
              }
            ],
            "name": "Token",
            "nodeType": "EnumDefinition",
            "src": "1294:22:7"
          },
          {
            "constant": false,
            "id": 118,
            "mutability": "mutable",
            "name": "addressLink",
            "nodeType": "VariableDeclaration",
            "scope": 700,
            "src": "1322:64:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 116,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1322:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307861333630383546363965323838396332323432313046363033443833363734386537644330303838",
              "id": 117,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1344:42:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xa36085F69e2889c224210F603D836748e7dC0088"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 121,
            "mutability": "mutable",
            "name": "addressUSDC",
            "nodeType": "VariableDeclaration",
            "scope": 700,
            "src": "1469:64:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 119,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1469:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862376134463345393039374330386441303935313762356142383737463761393137323234656465",
              "id": 120,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1491:42:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "618e552c",
            "id": 124,
            "mutability": "mutable",
            "name": "totalAvailableLink",
            "nodeType": "VariableDeclaration",
            "scope": 700,
            "src": "1624:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 122,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1624:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 123,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1660:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2e411c2",
            "id": 127,
            "mutability": "mutable",
            "name": "totalAvailableUSDC",
            "nodeType": "VariableDeclaration",
            "scope": 700,
            "src": "1686:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 125,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1686:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 126,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1722:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "868c844f",
            "id": 130,
            "mutability": "mutable",
            "name": "totalLpTokens",
            "nodeType": "VariableDeclaration",
            "scope": 700,
            "src": "1748:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 128,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1748:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 129,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1780:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c57981b5",
            "id": 137,
            "mutability": "mutable",
            "name": "FEE",
            "nodeType": "VariableDeclaration",
            "scope": 700,
            "src": "1811:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 131,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1811:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "id": 136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "33",
                "id": 132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1832:1:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000_by_1",
                  "typeString": "int_const 1000"
                },
                "id": 135,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 133,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1836:2:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "33",
                  "id": 134,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1842:1:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                "src": "1836:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000_by_1",
                  "typeString": "int_const 1000"
                }
              },
              "src": "1832:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 140,
            "mutability": "mutable",
            "name": "isPoolInitialized",
            "nodeType": "VariableDeclaration",
            "scope": 700,
            "src": "1871:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 138,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1871:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 139,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1896:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 143,
            "mutability": "mutable",
            "name": "lpTokens",
            "nodeType": "VariableDeclaration",
            "scope": 700,
            "src": "1908:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
              "typeString": "contract LpSimpleSwap"
            },
            "typeName": {
              "id": 142,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 141,
                "name": "LpSimpleSwap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 107,
                "src": "1908:12:7"
              },
              "referencedDeclaration": 107,
              "src": "1908:12:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
                "typeString": "contract LpSimpleSwap"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "2031:707:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2049:18:7",
                        "subExpression": {
                          "id": 153,
                          "name": "isPoolInitialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2050:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2077617320616c726561647920696e697469616c697a6564",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2069:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b59949e3d8f8490479ab94a73fce09742244154c44305b7e9235a37f26be6af6",
                          "typeString": "literal_string \"The pool was already initialized\""
                        },
                        "value": "The pool was already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b59949e3d8f8490479ab94a73fce09742244154c44305b7e9235a37f26be6af6",
                          "typeString": "literal_string \"The pool was already initialized\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2041:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2041:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2041:63:7"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "isPoolInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2114:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2134:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2114:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:24:7"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 162,
                      "name": "lpTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "2149:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
                        "typeString": "contract LpSimpleSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 168,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2185:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                "typeString": "contract SimpleSwap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                "typeString": "contract SimpleSwap"
                              }
                            ],
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2177:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 166,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2177:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2177:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2160:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_LpSimpleSwap_$107_$",
                          "typeString": "function (address) returns (contract LpSimpleSwap)"
                        },
                        "typeName": {
                          "id": 164,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 163,
                            "name": "LpSimpleSwap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 107,
                            "src": "2164:12:7"
                          },
                          "referencedDeclaration": 107,
                          "src": "2164:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
                            "typeString": "contract LpSimpleSwap"
                          }
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2160:31:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
                        "typeString": "contract LpSimpleSwap"
                      }
                    },
                    "src": "2149:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
                      "typeString": "contract LpSimpleSwap"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2149:42:7"
                },
                {
                  "assignments": [
                    175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 175,
                      "mutability": "mutable",
                      "name": "Link",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "2202:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$37",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 174,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 173,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "2202:6:7"
                        },
                        "referencedDeclaration": 37,
                        "src": "2202:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$37",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 177,
                        "name": "addressLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2223:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 176,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2216:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2216:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$37",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2202:33:7"
                },
                {
                  "assignments": [
                    182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 182,
                      "mutability": "mutable",
                      "name": "USDC",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "2245:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$37",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 181,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 180,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "2245:6:7"
                        },
                        "referencedDeclaration": 37,
                        "src": "2245:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$37",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 186,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 184,
                        "name": "addressUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2266:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 183,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2259:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2259:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$37",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2245:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 190,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2315:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2315:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 194,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2335:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              ],
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2327:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 192,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2327:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2327:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 196,
                            "name": "amountLinkToSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "2342:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 188,
                            "name": "Link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "2297:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "2297:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2297:64:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e6b20616d6f756e7420756e617661696c61626c652e",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2363:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_591cf3d3018fa9e37e640351a76135b58faebb191920a81c66c2abc7a2e848f6",
                          "typeString": "literal_string \"Link amount unavailable.\""
                        },
                        "value": "Link amount unavailable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_591cf3d3018fa9e37e640351a76135b58faebb191920a81c66c2abc7a2e848f6",
                          "typeString": "literal_string \"Link amount unavailable.\""
                        }
                      ],
                      "id": 187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2289:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:101:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:101:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 204,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2426:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2426:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 208,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2446:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              ],
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2438:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 206,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2438:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2438:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 210,
                            "name": "amountUsdcToSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "2453:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 202,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "2408:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "2408:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2408:64:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5553444320616d6f756e7420756e617661696c61626c652e",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5242f098d6ef367a38ad451edc792a59ddb5e521292071330cacb901006b65cd",
                          "typeString": "literal_string \"USDC amount unavailable.\""
                        },
                        "value": "USDC amount unavailable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5242f098d6ef367a38ad451edc792a59ddb5e521292071330cacb901006b65cd",
                          "typeString": "literal_string \"USDC amount unavailable.\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2400:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2400:101:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2400:101:7"
                },
                {
                  "expression": {
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 215,
                      "name": "totalAvailableLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "2512:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 218,
                          "name": "amountLinkToSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "2556:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 216,
                          "name": "totalAvailableLink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2533:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1588,
                        "src": "2533:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2533:42:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2512:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2512:63:7"
                },
                {
                  "expression": {
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 222,
                      "name": "totalAvailableUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2585:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 225,
                          "name": "amountUsdcToSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2629:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 223,
                          "name": "totalAvailableUSDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "2606:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1588,
                        "src": "2606:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2606:42:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2585:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:63:7"
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 229,
                      "name": "totalLpTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "2659:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 230,
                      "name": "amountUsdcToSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "2675:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2659:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2659:34:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 236,
                        "name": "totalLpTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "2717:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 233,
                        "name": "lpTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2703:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
                          "typeString": "contract LpSimpleSwap"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71,
                      "src": "2703:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2703:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:28:7"
                }
              ]
            },
            "functionSelector": "ce49ea9a",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 150,
                "modifierName": {
                  "id": 149,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 747,
                  "src": "2021:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2021:9:7"
              }
            ],
            "name": "initiatePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "amountLinkToSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1958:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1958:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "amountUsdcToSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1986:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1957:56:7"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2031:0:7"
            },
            "scope": 700,
            "src": "1936:802:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "2845:1252:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 251,
                        "name": "isPoolInitialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2863:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2073686f756c6420626520696e697469616c697a65642066697273742e",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2882:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6038f3aab9a6f4479b3089d4df55b83535c025ad2769d8c0ee5bf32e68b2d580",
                          "typeString": "literal_string \"The pool should be initialized first.\""
                        },
                        "value": "The pool should be initialized first."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6038f3aab9a6f4479b3089d4df55b83535c025ad2769d8c0ee5bf32e68b2d580",
                          "typeString": "literal_string \"The pool should be initialized first.\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2855:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "2855:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 256,
                          "name": "quantitySoldToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "2940:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2960:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2940:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e7420746f2073656c6c2073686f756c64206265207374726963746c7920626967676572207468616e20302e",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2963:54:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_229315b7c9587d505a36a119e5a30260cb9a9d236b8c7ce6a99c313fbc52d461",
                          "typeString": "literal_string \"The amount to sell should be strictly bigger than 0.\""
                        },
                        "value": "The amount to sell should be strictly bigger than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_229315b7c9587d505a36a119e5a30260cb9a9d236b8c7ce6a99c313fbc52d461",
                          "typeString": "literal_string \"The amount to sell should be strictly bigger than 0.\""
                        }
                      ],
                      "id": 255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2932:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2932:86:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2932:86:7"
                },
                {
                  "assignments": [
                    263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 263,
                      "mutability": "mutable",
                      "name": "amountPurchasedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "3028:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 262,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3028:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 268,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 265,
                        "name": "quantitySoldToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "3083:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 266,
                        "name": "tokenForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "3102:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Token_$115",
                          "typeString": "enum SimpleSwap.Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_Token_$115",
                          "typeString": "enum SimpleSwap.Token"
                        }
                      ],
                      "id": 264,
                      "name": "getAmountPurchasedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "3059:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_enum$_Token_$115_$returns$_t_uint256_$",
                        "typeString": "function (uint256,enum SimpleSwap.Token) view returns (uint256)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3059:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3028:87:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 270,
                          "name": "amountPurchasedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "3133:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 271,
                          "name": "minAmountPurchasedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "3157:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3133:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206f662070757263686173656420746f6b656e206973206c6f776572207468616e2072657175697265642e",
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3182:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbba2a48efd6b000ef46699fd497e00f081b29099d44fa3a135476e5eb8f25b6",
                          "typeString": "literal_string \"The amount of purchased token is lower than required.\""
                        },
                        "value": "The amount of purchased token is lower than required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbba2a48efd6b000ef46699fd497e00f081b29099d44fa3a135476e5eb8f25b6",
                          "typeString": "literal_string \"The amount of purchased token is lower than required.\""
                        }
                      ],
                      "id": 269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3125:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3125:113:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3125:113:7"
                },
                {
                  "assignments": [
                    278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 278,
                      "mutability": "mutable",
                      "name": "soldToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "3249:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$37",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 277,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 276,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "3249:6:7"
                        },
                        "referencedDeclaration": 37,
                        "src": "3249:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$37",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3249:16:7"
                },
                {
                  "assignments": [
                    282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 282,
                      "mutability": "mutable",
                      "name": "boughtToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "3275:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$37",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 281,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 280,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "3275:6:7"
                        },
                        "referencedDeclaration": 37,
                        "src": "3275:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$37",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 283,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3275:18:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Token_$115",
                      "typeString": "enum SimpleSwap.Token"
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 284,
                      "name": "tokenForSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "3308:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Token_$115",
                        "typeString": "enum SimpleSwap.Token"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 285,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "3324:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Token_$115_$",
                          "typeString": "type(enum SimpleSwap.Token)"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Link",
                      "nodeType": "MemberAccess",
                      "src": "3324:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Token_$115",
                        "typeString": "enum SimpleSwap.Token"
                      }
                    },
                    "src": "3308:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 341,
                    "nodeType": "Block",
                    "src": "3611:260:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 315,
                            "name": "totalAvailableLink",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "3625:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 318,
                                "name": "amountPurchasedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 263,
                                "src": "3669:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 316,
                                "name": "totalAvailableLink",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 124,
                                "src": "3646:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1603,
                              "src": "3646:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3646:44:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3625:65:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "3625:65:7"
                      },
                      {
                        "expression": {
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 322,
                            "name": "totalAvailableUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "3704:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 325,
                                "name": "quantitySoldToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "3748:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 323,
                                "name": "totalAvailableUSDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "3725:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1588,
                              "src": "3725:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3725:41:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3704:62:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 328,
                        "nodeType": "ExpressionStatement",
                        "src": "3704:62:7"
                      },
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 329,
                            "name": "soldToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3781:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 331,
                                "name": "addressUSDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 121,
                                "src": "3800:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 330,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "3793:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3793:19:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3781:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$37",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "3781:31:7"
                      },
                      {
                        "expression": {
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 335,
                            "name": "boughtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3827:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 337,
                                "name": "addressLink",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 118,
                                "src": "3848:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 336,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "3841:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3841:19:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3827:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$37",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 340,
                        "nodeType": "ExpressionStatement",
                        "src": "3827:33:7"
                      }
                    ]
                  },
                  "id": 342,
                  "nodeType": "IfStatement",
                  "src": "3304:567:7",
                  "trueBody": {
                    "id": 314,
                    "nodeType": "Block",
                    "src": "3336:260:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 288,
                            "name": "totalAvailableLink",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "3350:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 291,
                                "name": "quantitySoldToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "3395:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 289,
                                "name": "totalAvailableLink",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 124,
                                "src": "3372:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1588,
                              "src": "3372:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3372:41:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3350:63:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "3350:63:7"
                      },
                      {
                        "expression": {
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 295,
                            "name": "totalAvailableUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "3427:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 298,
                                "name": "amountPurchasedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 263,
                                "src": "3471:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 296,
                                "name": "totalAvailableUSDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "3448:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1603,
                              "src": "3448:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3448:44:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3427:65:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 301,
                        "nodeType": "ExpressionStatement",
                        "src": "3427:65:7"
                      },
                      {
                        "expression": {
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 302,
                            "name": "soldToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3507:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 304,
                                "name": "addressLink",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 118,
                                "src": "3526:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 303,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "3519:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3519:19:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3507:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$37",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 307,
                        "nodeType": "ExpressionStatement",
                        "src": "3507:31:7"
                      },
                      {
                        "expression": {
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 308,
                            "name": "boughtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3552:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 310,
                                "name": "addressUSDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 121,
                                "src": "3573:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 309,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "3566:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3566:19:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3552:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$37",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "3552:33:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 346,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3909:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3909:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 348,
                            "name": "amountPurchasedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "3921:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 344,
                            "name": "boughtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3888:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "3888:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3888:54:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 343,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3881:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3881:62:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "3881:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 355,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3984:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3984:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 359,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4004:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              ],
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3996:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 357,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3996:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3996:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 361,
                            "name": "quantitySoldToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "4011:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 353,
                            "name": "soldToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3961:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "3961:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3961:68:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206f662074686520616d6f756e74206f6620746f6b656e20796f752077616e7420746f2073656c6c206661696c65642e",
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4031:58:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_895e7d251133ad7c46606a147d2321601428e92dcd0a50a69507b30c13cb22fa",
                          "typeString": "literal_string \"Transfer of the amount of token you want to sell failed.\""
                        },
                        "value": "Transfer of the amount of token you want to sell failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_895e7d251133ad7c46606a147d2321601428e92dcd0a50a69507b30c13cb22fa",
                          "typeString": "literal_string \"Transfer of the amount of token you want to sell failed.\""
                        }
                      ],
                      "id": 352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3953:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3953:137:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "3953:137:7"
                }
              ]
            },
            "functionSelector": "5c36d25e",
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "quantitySoldToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "2758:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "minAmountPurchasedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "2785:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2785:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "tokenForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "2818:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Token_$115",
                    "typeString": "enum SimpleSwap.Token"
                  },
                  "typeName": {
                    "id": 246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 245,
                      "name": "Token",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 115,
                      "src": "2818:5:7"
                    },
                    "referencedDeclaration": 115,
                    "src": "2818:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Token_$115",
                      "typeString": "enum SimpleSwap.Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2757:80:7"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2845:0:7"
            },
            "scope": 700,
            "src": "2744:1353:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "4150:1033:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 373,
                        "name": "isPoolInitialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "4168:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2073686f756c6420626520696e697469616c697a65642066697273742e",
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4187:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6038f3aab9a6f4479b3089d4df55b83535c025ad2769d8c0ee5bf32e68b2d580",
                          "typeString": "literal_string \"The pool should be initialized first.\""
                        },
                        "value": "The pool should be initialized first."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6038f3aab9a6f4479b3089d4df55b83535c025ad2769d8c0ee5bf32e68b2d580",
                          "typeString": "literal_string \"The pool should be initialized first.\""
                        }
                      ],
                      "id": 372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4160:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4160:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "4160:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 378,
                          "name": "amountLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "4245:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4262:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4245:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206f6620737570706c696564206c7020746f6b656e732073686f756c64206265203e20302e",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4265:49:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3edc197d99dc2fb86176939dfb63767cb4b4d2628cec7bef006b1c5d9ab844",
                          "typeString": "literal_string \"The amount of supplied lp tokens should be > 0.\""
                        },
                        "value": "The amount of supplied lp tokens should be > 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d3edc197d99dc2fb86176939dfb63767cb4b4d2628cec7bef006b1c5d9ab844",
                          "typeString": "literal_string \"The amount of supplied lp tokens should be > 0.\""
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4237:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4237:78:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "4237:78:7"
                },
                {
                  "assignments": [
                    385,
                    387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 385,
                      "mutability": "mutable",
                      "name": "amountLinkPerLpToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4326:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4326:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 387,
                      "mutability": "mutable",
                      "name": "amountUsdcPerLpToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4356:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4356:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 390,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 388,
                      "name": "getLpTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "4388:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view returns (uint256,uint256)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4388:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4325:80:7"
                },
                {
                  "assignments": [
                    393
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 393,
                      "mutability": "mutable",
                      "name": "Link",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4416:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$37",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 392,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 391,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "4416:6:7"
                        },
                        "referencedDeclaration": 37,
                        "src": "4416:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$37",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 397,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 395,
                        "name": "addressLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "4437:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 394,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4430:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4430:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$37",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4416:33:7"
                },
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "USDC",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4459:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$37",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 399,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 398,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "4459:6:7"
                        },
                        "referencedDeclaration": 37,
                        "src": "4459:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$37",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 404,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 402,
                        "name": "addressUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "4480:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 401,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4473:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4473:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$37",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4459:33:7"
                },
                {
                  "assignments": [
                    406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 406,
                      "mutability": "mutable",
                      "name": "amountLinkToSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4503:26:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 405,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4503:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 416,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4577:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4583:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4577:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 409,
                            "name": "amountLpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "4557:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 407,
                            "name": "amountLinkPerLpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 385,
                            "src": "4532:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1618,
                          "src": "4532:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4532:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1633,
                      "src": "4532:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4532:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4503:82:7"
                },
                {
                  "assignments": [
                    418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 418,
                      "mutability": "mutable",
                      "name": "amountUSDCToSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4610:26:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4610:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4684:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4690:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4684:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 421,
                            "name": "amountLpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "4664:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 419,
                            "name": "amountUsdcPerLpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "4639:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1618,
                          "src": "4639:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4639:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1633,
                      "src": "4639:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4639:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4610:82:7"
                },
                {
                  "expression": {
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 429,
                      "name": "totalAvailableLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "4717:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 432,
                          "name": "amountLinkToSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 406,
                          "src": "4761:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 430,
                          "name": "totalAvailableLink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "4738:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1588,
                        "src": "4738:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4738:42:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4717:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "4717:63:7"
                },
                {
                  "expression": {
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 436,
                      "name": "totalAvailableUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "4790:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 439,
                          "name": "amountUSDCToSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "4834:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 437,
                          "name": "totalAvailableUSDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "4811:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1588,
                        "src": "4811:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4811:42:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4790:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "4790:63:7"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 443,
                      "name": "totalLpTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "4864:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 446,
                          "name": "amountLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "4898:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 444,
                          "name": "totalLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "4880:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1588,
                        "src": "4880:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4880:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4864:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "4864:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 453,
                        "name": "amountLpTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "4938:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 450,
                        "name": "lpTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "4924:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
                          "typeString": "contract LpSimpleSwap"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71,
                      "src": "4924:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4924:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "4924:29:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 459,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4990:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4990:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 463,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5010:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              ],
                              "id": 462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5002:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 461,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5002:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5002:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 465,
                            "name": "amountLinkToSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "5017:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 457,
                            "name": "Link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "4972:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "4972:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4972:64:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e6b20616d6f756e7420756e617661696c61626c652e",
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5038:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_591cf3d3018fa9e37e640351a76135b58faebb191920a81c66c2abc7a2e848f6",
                          "typeString": "literal_string \"Link amount unavailable.\""
                        },
                        "value": "Link amount unavailable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_591cf3d3018fa9e37e640351a76135b58faebb191920a81c66c2abc7a2e848f6",
                          "typeString": "literal_string \"Link amount unavailable.\""
                        }
                      ],
                      "id": 456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4964:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4964:101:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "4964:101:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 473,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5101:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5101:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 477,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5121:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$700",
                                  "typeString": "contract SimpleSwap"
                                }
                              ],
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5113:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 475,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5113:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5113:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 479,
                            "name": "amountUSDCToSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "5128:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 471,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "5083:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "5083:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5083:64:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5553444320616d6f756e7420756e617661696c61626c652e",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5149:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5242f098d6ef367a38ad451edc792a59ddb5e521292071330cacb901006b65cd",
                          "typeString": "literal_string \"USDC amount unavailable.\""
                        },
                        "value": "USDC amount unavailable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5242f098d6ef367a38ad451edc792a59ddb5e521292071330cacb901006b65cd",
                          "typeString": "literal_string \"USDC amount unavailable.\""
                        }
                      ],
                      "id": 470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5075:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5075:101:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "5075:101:7"
                }
              ]
            },
            "functionSelector": "35403023",
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "amountLpTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "4119:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4118:24:7"
            },
            "returnParameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4150:0:7"
            },
            "scope": 700,
            "src": "4103:1080:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "5238:1034:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 491,
                        "name": "isPoolInitialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "5256:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2073686f756c6420626520696e697469616c697a65642066697273742e",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5275:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6038f3aab9a6f4479b3089d4df55b83535c025ad2769d8c0ee5bf32e68b2d580",
                          "typeString": "literal_string \"The pool should be initialized first.\""
                        },
                        "value": "The pool should be initialized first."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6038f3aab9a6f4479b3089d4df55b83535c025ad2769d8c0ee5bf32e68b2d580",
                          "typeString": "literal_string \"The pool should be initialized first.\""
                        }
                      ],
                      "id": 490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5248:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5248:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 496,
                          "name": "amountLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "5333:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5350:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5333:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206f6620726571756573746564206c7020746f6b656e732073686f756c64206265203e20302e",
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5353:50:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_981c433ebc0dc24005b61ab2540ad670d4eac08e3e379c43f678b7803187e1b2",
                          "typeString": "literal_string \"The amount of requested lp tokens should be > 0.\""
                        },
                        "value": "The amount of requested lp tokens should be > 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_981c433ebc0dc24005b61ab2540ad670d4eac08e3e379c43f678b7803187e1b2",
                          "typeString": "literal_string \"The amount of requested lp tokens should be > 0.\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5325:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5325:79:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "5325:79:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 505,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5441:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5441:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 503,
                              "name": "lpTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "5422:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
                                "typeString": "contract LpSimpleSwap"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 903,
                            "src": "5422:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5422:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 508,
                          "name": "amountLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "5456:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5422:48:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768204c5020746f6b656e732e",
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5472:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5df3abdb3ead51351b27c91d31547c5e6be42e41e5dfbf4c06fc289f0547de84",
                          "typeString": "literal_string \"You don't have enough LP tokens.\""
                        },
                        "value": "You don't have enough LP tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5df3abdb3ead51351b27c91d31547c5e6be42e41e5dfbf4c06fc289f0547de84",
                          "typeString": "literal_string \"You don't have enough LP tokens.\""
                        }
                      ],
                      "id": 502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5414:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5414:93:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "5414:93:7"
                },
                {
                  "assignments": [
                    514,
                    516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 514,
                      "mutability": "mutable",
                      "name": "amountLinkPerLpToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "5527:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 513,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5527:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "amountUSDCPerLpToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "5557:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5557:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 519,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 517,
                      "name": "getLpTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "5590:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view returns (uint256,uint256)"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5590:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5526:81:7"
                },
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "amountLinkToWithdraw",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "5618:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5618:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 531,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5694:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5700:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "5694:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 524,
                            "name": "amountLpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "5674:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 522,
                            "name": "amountLinkPerLpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "5649:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1618,
                          "src": "5649:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5649:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1633,
                      "src": "5649:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5649:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5618:84:7"
                },
                {
                  "assignments": [
                    533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 533,
                      "mutability": "mutable",
                      "name": "amountUSDCToWithdraw",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "5712:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 532,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5712:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 543,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5788:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5794:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "5788:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 536,
                            "name": "amountLpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "5768:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 534,
                            "name": "amountUSDCPerLpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "5743:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1618,
                          "src": "5743:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5743:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1633,
                      "src": "5743:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5743:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5712:84:7"
                },
                {
                  "expression": {
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 544,
                      "name": "totalAvailableLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "5807:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 547,
                          "name": "amountLinkToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "5851:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 545,
                          "name": "totalAvailableLink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "5828:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1603,
                        "src": "5828:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5828:44:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5807:65:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "5807:65:7"
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 551,
                      "name": "totalAvailableUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "5882:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 554,
                          "name": "amountUSDCToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 533,
                          "src": "5926:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 552,
                          "name": "totalAvailableUSDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "5903:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1603,
                        "src": "5903:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5903:44:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5882:65:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "5882:65:7"
                },
                {
                  "expression": {
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 558,
                      "name": "totalLpTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "5958:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 561,
                          "name": "amountLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "5992:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 559,
                          "name": "totalLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "5974:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1603,
                        "src": "5974:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5974:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5958:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "5958:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 568,
                        "name": "amountLpTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 487,
                        "src": "6032:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 565,
                        "name": "lpTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "6018:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LpSimpleSwap_$107",
                          "typeString": "contract LpSimpleSwap"
                        }
                      },
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "6018:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6018:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "6018:29:7"
                },
                {
                  "assignments": [
                    573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 573,
                      "mutability": "mutable",
                      "name": "Link",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "6058:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$37",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 572,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 571,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "6058:6:7"
                        },
                        "referencedDeclaration": 37,
                        "src": "6058:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$37",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 577,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 575,
                        "name": "addressLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "6079:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 574,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "6072:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6072:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$37",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6058:33:7"
                },
                {
                  "assignments": [
                    580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 580,
                      "mutability": "mutable",
                      "name": "USDC",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "6101:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$37",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 579,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 578,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "6101:6:7"
                        },
                        "referencedDeclaration": 37,
                        "src": "6101:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$37",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 584,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 582,
                        "name": "addressUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "6122:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 581,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "6115:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$37_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6115:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$37",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6101:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 588,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6166:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6166:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 590,
                            "name": "amountLinkToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 521,
                            "src": "6178:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 586,
                            "name": "Link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "6152:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "6152:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6152:47:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 585,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "6145:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6145:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "6145:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 597,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6231:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6231:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 599,
                            "name": "amountUSDCToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "6243:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 595,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "6217:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "6217:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6217:47:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 594,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "6210:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6210:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "6210:55:7"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "amountLpTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "5207:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5207:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5206:24:7"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5238:0:7"
            },
            "scope": 700,
            "src": "5189:1083:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "6592:449:7",
              "statements": [
                {
                  "assignments": [
                    615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "y",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "6602:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6602:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 624,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Token_$115",
                            "typeString": "enum SimpleSwap.Token"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 616,
                            "name": "tokenForSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "6615:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Token_$115",
                              "typeString": "enum SimpleSwap.Token"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 617,
                              "name": "Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "6631:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Token_$115_$",
                                "typeString": "type(enum SimpleSwap.Token)"
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Link",
                            "nodeType": "MemberAccess",
                            "src": "6631:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Token_$115",
                              "typeString": "enum SimpleSwap.Token"
                            }
                          },
                          "src": "6615:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 620,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6614:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 622,
                      "name": "totalAvailableLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "6666:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6614:70:7",
                    "trueExpression": {
                      "id": 621,
                      "name": "totalAvailableUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "6645:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6602:82:7"
                },
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "6694:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6694:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 635,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Token_$115",
                            "typeString": "enum SimpleSwap.Token"
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 627,
                            "name": "tokenForSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "6707:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Token_$115",
                              "typeString": "enum SimpleSwap.Token"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 628,
                              "name": "Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "6723:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Token_$115_$",
                                "typeString": "type(enum SimpleSwap.Token)"
                              }
                            },
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Link",
                            "nodeType": "MemberAccess",
                            "src": "6723:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Token_$115",
                              "typeString": "enum SimpleSwap.Token"
                            }
                          },
                          "src": "6707:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 631,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6706:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 633,
                      "name": "totalAvailableUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "6758:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6706:70:7",
                    "trueExpression": {
                      "id": 632,
                      "name": "totalAvailableLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "6737:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6694:82:7"
                },
                {
                  "assignments": [
                    637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 637,
                      "mutability": "mutable",
                      "name": "C",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "6787:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 636,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6787:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 642,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 640,
                        "name": "totalAvailableLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "6822:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 638,
                        "name": "totalAvailableUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "6799:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1618,
                      "src": "6799:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6799:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6787:54:7"
                },
                {
                  "assignments": [
                    644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 644,
                      "mutability": "mutable",
                      "name": "amountPurchasedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "6874:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6874:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 655,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 651,
                                "name": "amountSoldTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 606,
                                "src": "6924:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 649,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 626,
                                "src": "6918:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1588,
                              "src": "6918:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6918:23:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 647,
                            "name": "C",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "6912:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1633,
                          "src": "6912:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6912:30:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 645,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "6906:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1603,
                      "src": "6906:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6906:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6874:69:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7026:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7032:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "7026:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7007:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7013:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7007:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 661,
                              "name": "FEE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "7017:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7007:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 656,
                            "name": "amountPurchasedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 644,
                            "src": "6981:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1618,
                          "src": "6981:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6981:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1633,
                      "src": "6981:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6981:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 613,
                  "id": 669,
                  "nodeType": "Return",
                  "src": "6974:60:7"
                }
              ]
            },
            "id": 671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountPurchasedToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "amountSoldTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "6511:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6511:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "tokenForSale",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "6537:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Token_$115",
                    "typeString": "enum SimpleSwap.Token"
                  },
                  "typeName": {
                    "id": 608,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 607,
                      "name": "Token",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 115,
                      "src": "6537:5:7"
                    },
                    "referencedDeclaration": 115,
                    "src": "6537:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Token_$115",
                      "typeString": "enum SimpleSwap.Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6510:46:7"
            },
            "returnParameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "6579:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6579:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6578:9:7"
            },
            "scope": 700,
            "src": "6478:563:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 698,
              "nodeType": "Block",
              "src": "7117:128:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 685,
                            "name": "totalLpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "7171:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "id": 682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 680,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7158:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7164:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "7158:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              ],
                              "expression": {
                                "id": 678,
                                "name": "totalAvailableLink",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 124,
                                "src": "7135:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1618,
                              "src": "7135:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7135:31:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1633,
                          "src": "7135:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7135:50:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 694,
                            "name": "totalLpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "7223:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 689,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7210:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7216:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "7210:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              ],
                              "expression": {
                                "id": 687,
                                "name": "totalAvailableUSDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "7187:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1618,
                              "src": "7187:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7187:31:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1633,
                          "src": "7187:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7187:50:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 696,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7134:104:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 677,
                  "id": 697,
                  "nodeType": "Return",
                  "src": "7127:111:7"
                }
              ]
            },
            "functionSelector": "6f5cdb6c",
            "id": 699,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLpTokenPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7071:2:7"
            },
            "returnParameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "7094:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7094:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "7103:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7103:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7093:18:7"
            },
            "scope": 700,
            "src": "7047:198:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 701,
        "src": "1225:6022:7"
      }
    ],
    "src": "39:7211:7"
  },
  "bytecode": "6080604052600180546001600160a01b031990811673a36085f69e2889c224210f603d836748e7dc0088179091556002805490911673b7a4f3e9097c08da09517b5ab877f7a917224ede179055600060038190556004819055600555610bb86006556007805460ff1916905534801561007757600080fd5b5061008861008361008d565b610091565b6100e1565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61247a806100f06000396000f3fe60806040523480156200001157600080fd5b5060043610620000c45760003560e01c8063868c844f116200007b578063868c844f14620001565780638da5cb5b1462000160578063b2e411c21462000179578063c57981b51462000183578063ce49ea9a146200018d578063f2fde38b14620001a457620000c4565b80632e1a7d4d14620000c95780633540302314620000e25780635c36d25e14620000f9578063618e552c14620001105780636f5cdb6c1462000132578063715018a6146200014c575b600080fd5b620000e0620000da36600462000fcf565b620001bb565b005b620000e0620000f336600462000fcf565b620004f9565b620000e06200010a36600462001023565b62000786565b6200011a620009f6565b604051620001299190620013ee565b60405180910390f35b6200013c620009fc565b60405162000129929190620013f7565b620000e062000a49565b6200011a62000a9d565b6200016a62000aa3565b60405162000129919062001060565b6200011a62000ab2565b6200011a62000ab8565b620000e06200019e36600462001001565b62000abe565b620000e0620001b536600462000f84565b62000d7c565b60075460ff16620001e95760405162461bcd60e51b8152600401620001e0906200123d565b60405180910390fd5b600081116200020c5760405162461bcd60e51b8152600401620001e090620012df565b6007546040516370a0823160e01b8152829161010090046001600160a01b0316906370a08231906200024390339060040162001060565b60206040518083038186803b1580156200025c57600080fd5b505afa15801562000271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000297919062000fe8565b1015620002b85760405162461bcd60e51b8152600401620001e09062001208565b600080620002c5620009fc565b90925090506000620002e7620f4240620002e0858762000df9565b9062000e0e565b90506000620002ff620f4240620002e0858862000df9565b60035490915062000311908362000e1c565b60035560045462000323908262000e1c565b60045560055462000335908662000e1c565b600555600754604051630852cd8d60e31b81526101009091046001600160a01b0316906342966c68906200036e908890600401620013ee565b600060405180830381600087803b1580156200038957600080fd5b505af11580156200039e573d6000803e3d6000fd5b505060015460025460405163a9059cbb60e01b81526001600160a01b03928316945091169150829063a9059cbb90620003de903390889060040162001098565b602060405180830381600087803b158015620003f957600080fd5b505af11580156200040e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000434919062000fad565b6200044f57634e487b7160e01b600052600160045260246000fd5b60405163a9059cbb60e01b81526001600160a01b0382169063a9059cbb906200047f903390879060040162001098565b602060405180830381600087803b1580156200049a57600080fd5b505af1158015620004af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d5919062000fad565b620004f057634e487b7160e01b600052600160045260246000fd5b50505050505050565b60075460ff166200051e5760405162461bcd60e51b8152600401620001e0906200123d565b60008111620005415760405162461bcd60e51b8152600401620001e0906200114b565b6000806200054e620009fc565b6001546002549294509092506001600160a01b03908116911660006200057d620f4240620002e0878962000df9565b9050600062000595620f4240620002e0878a62000df9565b600354909150620005a7908362000e2a565b600355600454620005b9908262000e2a565b600455600554620005cb908862000e2a565b60055560075460405163140e25ad60e31b81526101009091046001600160a01b03169063a0712d689062000604908a90600401620013ee565b600060405180830381600087803b1580156200061f57600080fd5b505af115801562000634573d6000803e3d6000fd5b50506040516323b872dd60e01b81526001600160a01b03871692506323b872dd91506200066a9033903090879060040162001074565b602060405180830381600087803b1580156200068557600080fd5b505af11580156200069a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006c0919062000fad565b620006df5760405162461bcd60e51b8152600401620001e090620011d1565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90620007119033903090869060040162001074565b602060405180830381600087803b1580156200072c57600080fd5b505af115801562000741573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000767919062000fad565b620004f05760405162461bcd60e51b8152600401620001e0906200119a565b60075460ff16620007ab5760405162461bcd60e51b8152600401620001e0906200123d565b60008311620007ce5760405162461bcd60e51b8152600401620001e090620010b1565b6000620007dc848362000e38565b905082811015620008015760405162461bcd60e51b8152600401620001e09062001399565b600080808460018111156200082657634e487b7160e01b600052602160045260246000fd5b14156200086c576003546200083c908762000e2a565b6003556004546200084e908462000e1c565b60045550506001546002546001600160a01b039182169116620008a6565b6003546200087b908462000e1c565b6003556004546200088d908762000e2a565b60045550506002546001546001600160a01b0391821691165b60405163a9059cbb60e01b81526001600160a01b0382169063a9059cbb90620008d6903390879060040162001098565b602060405180830381600087803b158015620008f157600080fd5b505af115801562000906573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092c919062000fad565b6200094757634e487b7160e01b600052600160045260246000fd5b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906200097990339030908b9060040162001074565b602060405180830381600087803b1580156200099457600080fd5b505af1158015620009a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009cf919062000fad565b620009ee5760405162461bcd60e51b8152600401620001e09062001282565b505050505050565b60035481565b60008062000a20600554620002e0620f424060035462000df990919063ffffffff16565b62000a41600554620002e0620f424060045462000df990919063ffffffff16565b915091509091565b62000a5362000f22565b6001600160a01b031662000a6662000aa3565b6001600160a01b03161462000a8f5760405162461bcd60e51b8152600401620001e0906200132f565b62000a9b600062000f26565b565b60055481565b6000546001600160a01b031690565b60045481565b60065481565b62000ac862000f22565b6001600160a01b031662000adb62000aa3565b6001600160a01b03161462000b045760405162461bcd60e51b8152600401620001e0906200132f565b60075460ff161562000b2a5760405162461bcd60e51b8152600401620001e09062001364565b6007805460ff19166001179055604051309062000b479062000f76565b62000b53919062001060565b604051809103906000f08015801562000b70573d6000803e3d6000fd5b5060078054610100600160a81b0319166101006001600160a01b03938416021790556001546002546040516323b872dd60e01b815291831692169082906323b872dd9062000bc79033903090899060040162001074565b602060405180830381600087803b15801562000be257600080fd5b505af115801562000bf7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c1d919062000fad565b62000c3c5760405162461bcd60e51b8152600401620001e090620011d1565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd9062000c6e9033903090889060040162001074565b602060405180830381600087803b15801562000c8957600080fd5b505af115801562000c9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cc4919062000fad565b62000ce35760405162461bcd60e51b8152600401620001e0906200119a565b60035462000cf2908562000e2a565b60035560045462000d04908462000e2a565b6004908155600584905560075460405163140e25ad60e31b81526101009091046001600160a01b03169163a0712d689162000d4291879101620013ee565b600060405180830381600087803b15801562000d5d57600080fd5b505af115801562000d72573d6000803e3d6000fd5b5050505050505050565b62000d8662000f22565b6001600160a01b031662000d9962000aa3565b6001600160a01b03161462000dc25760405162461bcd60e51b8152600401620001e0906200132f565b6001600160a01b03811662000deb5760405162461bcd60e51b8152600401620001e09062001105565b62000df68162000f26565b50565b600062000e07828462001441565b9392505050565b600062000e07828462001420565b600062000e07828462001463565b600062000e07828462001405565b6000808083600181111562000e5d57634e487b7160e01b600052602160045260246000fd5b1462000e6c5760035462000e70565b6004545b905060008084600181111562000e9657634e487b7160e01b600052602160045260246000fd5b1462000ea55760045462000ea9565b6003545b9050600062000ec660035460045462000df990919063ffffffff16565b9050600062000eee62000ee662000ede858a62000e2a565b849062000e0e565b859062000e1c565b905062000f17620f4240620002e0600654620f424062000f0f919062001463565b849062000df9565b979650505050505050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610fb1806200149483390190565b60006020828403121562000f96578081fd5b81356001600160a01b038116811462000e07578182fd5b60006020828403121562000fbf578081fd5b8151801515811462000e07578182fd5b60006020828403121562000fe1578081fd5b5035919050565b60006020828403121562000ffa578081fd5b5051919050565b6000806040838503121562001014578081fd5b50508035926020909101359150565b60008060006060848603121562001038578081fd5b833592506020840135915060408401356002811062001055578182fd5b809150509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208082526034908201527f54686520616d6f756e7420746f2073656c6c2073686f756c642062652073747260408201527334b1ba363c903134b3b3b2b9103a3430b710181760611b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602f908201527f54686520616d6f756e74206f6620737570706c696564206c7020746f6b656e7360408201526e1039b437bab632103132901f10181760891b606082015260800190565b60208082526018908201527f5553444320616d6f756e7420756e617661696c61626c652e0000000000000000604082015260600190565b60208082526018908201527f4c696e6b20616d6f756e7420756e617661696c61626c652e0000000000000000604082015260600190565b6020808252818101527f596f7520646f6e2774206861766520656e6f756768204c5020746f6b656e732e604082015260600190565b60208082526025908201527f54686520706f6f6c2073686f756c6420626520696e697469616c697a6564206660408201526434b939ba1760d91b606082015260800190565b60208082526038908201527f5472616e73666572206f662074686520616d6f756e74206f6620746f6b656e2060408201527f796f752077616e7420746f2073656c6c206661696c65642e0000000000000000606082015260800190565b60208082526030908201527f54686520616d6f756e74206f6620726571756573746564206c7020746f6b656e60408201526f399039b437bab632103132901f10181760811b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f54686520706f6f6c2077617320616c726561647920696e697469616c697a6564604082015260600190565b60208082526035908201527f54686520616d6f756e74206f662070757263686173656420746f6b656e206973604082015274103637bbb2b9103a3430b7103932b8bab4b932b21760591b606082015260800190565b90815260200190565b918252602082015260400190565b600082198211156200141b576200141b6200147d565b500190565b6000826200143c57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156200145e576200145e6200147d565b500290565b6000828210156200147857620014786200147d565b500390565b634e487b7160e01b600052601160045260246000fdfe60806040523480156200001157600080fd5b5060405162000fb138038062000fb1833981016040819052620000349162000174565b604080518082018252600e81526d04c702053696d706c6520537761760941b60208083019182528351808501909452600c84526b04c7053696d706c65537761760a41b9084015281519192916200008e91600391620000ce565b508051620000a4906004906020840190620000ce565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001e1565b828054620000dc90620001a4565b90600052602060002090601f0160209004810192826200010057600085556200014b565b82601f106200011b57805160ff19168380011785556200014b565b828001600101855582156200014b579182015b828111156200014b5782518255916020019190600101906200012e565b50620001599291506200015d565b5090565b5b808211156200015957600081556001016200015e565b60006020828403121562000186578081fd5b81516001600160a01b03811681146200019d578182fd5b9392505050565b600281046001821680620001b957607f821691505b60208210811415620001db57634e487b7160e01b600052602260045260246000fd5b50919050565b610dc080620001f16000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d68146101c0578063a457c2d7146101d3578063a9059cbb146101e6578063dd62ed3e146101f9576100ea565b806370a082311461019257806379cc6790146101a557806395d89b41146101b8576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806342966c681461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f761020c565b60405161010491906109c1565b60405180910390f35b61012061011b366004610975565b61029e565b60405161010491906109b6565b6101356102bb565b6040516101049190610cf3565b61012061015036600461093a565b6102c1565b61015d61035a565b6040516101049190610cfc565b610120610178366004610975565b61035f565b61019061018b36600461099e565b6103b3565b005b6101356101a03660046108e7565b6103d7565b6101906101b3366004610975565b6103f6565b6100f7610449565b6101906101ce36600461099e565b610458565b6101206101e1366004610975565b610479565b6101206101f4366004610975565b6104f2565b610135610207366004610908565b610506565b60606003805461021b90610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d39565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b60006102b26102ab610531565b8484610535565b50600192915050565b60025490565b60006102ce8484846105e9565b6001600160a01b0384166000908152600160205260408120816102ef610531565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561033b5760405162461bcd60e51b815260040161033290610b21565b60405180910390fd5b61034f85610347610531565b858403610535565b506001949350505050565b600690565b60006102b261036c610531565b84846001600061037a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ae9190610d0a565b610535565b6005546001600160a01b031633146103ca57600080fd5b6103d432826103f6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061040483610207610531565b9050818110156104265760405162461bcd60e51b815260040161033290610b69565b61043a83610432610531565b848403610535565b6104448383610713565b505050565b60606004805461021b90610d39565b6005546001600160a01b0316331461046f57600080fd5b6103d43282610804565b60008060016000610488610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d45760405162461bcd60e51b815260040161033290610c77565b6104e86104df610531565b85858403610535565b5060019392505050565b60006102b26104ff610531565b84846105e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661055b5760405162461bcd60e51b815260040161033290610c33565b6001600160a01b0382166105815760405162461bcd60e51b815260040161033290610a99565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dc908590610cf3565b60405180910390a3505050565b6001600160a01b03831661060f5760405162461bcd60e51b815260040161033290610bee565b6001600160a01b0382166106355760405162461bcd60e51b815260040161033290610a14565b610640838383610444565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260040161033290610adb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b0908490610d0a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fa9190610cf3565b60405180910390a361070d848484610444565b50505050565b6001600160a01b0382166107395760405162461bcd60e51b815260040161033290610bad565b61074582600083610444565b6001600160a01b0382166000908152602081905260409020548181101561077e5760405162461bcd60e51b815260040161033290610a57565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107ad908490610d22565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f0908690610cf3565b60405180910390a361044483600084610444565b6001600160a01b03821661082a5760405162461bcd60e51b815260040161033290610cbc565b61083660008383610444565b80600260008282546108489190610d0a565b90915550506001600160a01b03821660009081526020819052604081208054839290610875908490610d0a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108b8908590610cf3565b60405180910390a36108cc60008383610444565b5050565b80356001600160a01b03811681146103f157600080fd5b6000602082840312156108f8578081fd5b610901826108d0565b9392505050565b6000806040838503121561091a578081fd5b610923836108d0565b9150610931602084016108d0565b90509250929050565b60008060006060848603121561094e578081fd5b610957846108d0565b9250610965602085016108d0565b9150604084013590509250925092565b60008060408385031215610987578182fd5b610990836108d0565b946020939093013593505050565b6000602082840312156109af578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109ed578581018301518582016040015282016109d1565b818111156109fe5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d1d57610d1d610d74565b500190565b600082821015610d3457610d34610d74565b500390565b600281046001821680610d4d57607f821691505b60208210811415610d6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202dc867cfc5016eadd909b95d671c13554ccc92586b54969d014f51c08e6f47c264736f6c63430008000033a26469706673582212201283b9cc3ff5e78aaf136ee21f4cdecb3a9d8a7fa4b08b0f07297ebc19e2bb1164736f6c63430008000033",
  "bytecodeSha1": "c02aefcac5dca1a41d2c57c019c93931450e9ce5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "SimpleSwap",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "67": [
            1185,
            1208,
            true
          ],
          "68": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "SimpleSwap.initiatePool": {
          "64": [
            2049,
            2067,
            true
          ],
          "65": [
            2297,
            2361,
            true
          ],
          "66": [
            2408,
            2472,
            true
          ]
        },
        "SimpleSwap.supply": {
          "55": [
            4168,
            4185,
            true
          ],
          "56": [
            4245,
            4263,
            true
          ],
          "57": [
            4972,
            5036,
            true
          ],
          "58": [
            5083,
            5147,
            true
          ]
        },
        "SimpleSwap.swap": {
          "59": [
            2863,
            2880,
            true
          ],
          "60": [
            2940,
            2961,
            true
          ],
          "61": [
            3133,
            3180,
            true
          ],
          "62": [
            3308,
            3334,
            false
          ],
          "63": [
            3961,
            4029,
            true
          ]
        },
        "SimpleSwap.withdraw": {
          "52": [
            5256,
            5273,
            true
          ],
          "53": [
            5333,
            5351,
            true
          ],
          "54": [
            5422,
            5470,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "50": [
            2131,
            2148
          ],
          "51": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "32": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "31": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "42": [
            1926,
            1999
          ],
          "43": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "Context._msgSender": {
          "49": [
            658,
            675
          ]
        }
      },
      "6": {
        "SafeMath.add": {
          "47": [
            2749,
            2761
          ]
        },
        "SafeMath.div": {
          "45": [
            3844,
            3856
          ]
        },
        "SafeMath.mul": {
          "44": [
            3459,
            3471
          ]
        },
        "SafeMath.sub": {
          "46": [
            3116,
            3128
          ]
        }
      },
      "7": {
        "SimpleSwap.getAmountPurchasedToken": {
          "48": [
            6974,
            7034
          ]
        },
        "SimpleSwap.getLpTokenPrice": {
          "30": [
            7127,
            7238
          ]
        },
        "SimpleSwap.initiatePool": {
          "33": [
            2041,
            2104
          ],
          "34": [
            2114,
            2138
          ],
          "35": [
            2149,
            2191
          ],
          "36": [
            2289,
            2390
          ],
          "37": [
            2400,
            2501
          ],
          "38": [
            2512,
            2575
          ],
          "39": [
            2585,
            2648
          ],
          "40": [
            2659,
            2693
          ],
          "41": [
            2703,
            2731
          ]
        },
        "SimpleSwap.supply": {
          "9": [
            4160,
            4227
          ],
          "10": [
            4237,
            4315
          ],
          "11": [
            4717,
            4780
          ],
          "12": [
            4790,
            4853
          ],
          "13": [
            4864,
            4913
          ],
          "14": [
            4924,
            4953
          ],
          "15": [
            4964,
            5065
          ],
          "16": [
            5075,
            5176
          ]
        },
        "SimpleSwap.swap": {
          "17": [
            2855,
            2922
          ],
          "18": [
            2932,
            3018
          ],
          "19": [
            3125,
            3238
          ],
          "20": [
            3350,
            3413
          ],
          "21": [
            3427,
            3492
          ],
          "22": [
            3507,
            3538
          ],
          "23": [
            3552,
            3585
          ],
          "24": [
            3625,
            3690
          ],
          "25": [
            3704,
            3766
          ],
          "26": [
            3781,
            3812
          ],
          "27": [
            3827,
            3860
          ],
          "28": [
            3881,
            3943
          ],
          "29": [
            3953,
            4090
          ]
        },
        "SimpleSwap.withdraw": {
          "0": [
            5248,
            5315
          ],
          "1": [
            5325,
            5404
          ],
          "2": [
            5414,
            5507
          ],
          "3": [
            5807,
            5872
          ],
          "4": [
            5882,
            5947
          ],
          "5": [
            5958,
            6007
          ],
          "6": [
            6018,
            6047
          ],
          "7": [
            6145,
            6200
          ],
          "8": [
            6210,
            6265
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20Burnable",
    "IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata",
    "LpSimpleSwap",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeMath"
  ],
  "deployedBytecode": "60806040523480156200001157600080fd5b5060043610620000c45760003560e01c8063868c844f116200007b578063868c844f14620001565780638da5cb5b1462000160578063b2e411c21462000179578063c57981b51462000183578063ce49ea9a146200018d578063f2fde38b14620001a457620000c4565b80632e1a7d4d14620000c95780633540302314620000e25780635c36d25e14620000f9578063618e552c14620001105780636f5cdb6c1462000132578063715018a6146200014c575b600080fd5b620000e0620000da36600462000fcf565b620001bb565b005b620000e0620000f336600462000fcf565b620004f9565b620000e06200010a36600462001023565b62000786565b6200011a620009f6565b604051620001299190620013ee565b60405180910390f35b6200013c620009fc565b60405162000129929190620013f7565b620000e062000a49565b6200011a62000a9d565b6200016a62000aa3565b60405162000129919062001060565b6200011a62000ab2565b6200011a62000ab8565b620000e06200019e36600462001001565b62000abe565b620000e0620001b536600462000f84565b62000d7c565b60075460ff16620001e95760405162461bcd60e51b8152600401620001e0906200123d565b60405180910390fd5b600081116200020c5760405162461bcd60e51b8152600401620001e090620012df565b6007546040516370a0823160e01b8152829161010090046001600160a01b0316906370a08231906200024390339060040162001060565b60206040518083038186803b1580156200025c57600080fd5b505afa15801562000271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000297919062000fe8565b1015620002b85760405162461bcd60e51b8152600401620001e09062001208565b600080620002c5620009fc565b90925090506000620002e7620f4240620002e0858762000df9565b9062000e0e565b90506000620002ff620f4240620002e0858862000df9565b60035490915062000311908362000e1c565b60035560045462000323908262000e1c565b60045560055462000335908662000e1c565b600555600754604051630852cd8d60e31b81526101009091046001600160a01b0316906342966c68906200036e908890600401620013ee565b600060405180830381600087803b1580156200038957600080fd5b505af11580156200039e573d6000803e3d6000fd5b505060015460025460405163a9059cbb60e01b81526001600160a01b03928316945091169150829063a9059cbb90620003de903390889060040162001098565b602060405180830381600087803b158015620003f957600080fd5b505af11580156200040e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000434919062000fad565b6200044f57634e487b7160e01b600052600160045260246000fd5b60405163a9059cbb60e01b81526001600160a01b0382169063a9059cbb906200047f903390879060040162001098565b602060405180830381600087803b1580156200049a57600080fd5b505af1158015620004af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d5919062000fad565b620004f057634e487b7160e01b600052600160045260246000fd5b50505050505050565b60075460ff166200051e5760405162461bcd60e51b8152600401620001e0906200123d565b60008111620005415760405162461bcd60e51b8152600401620001e0906200114b565b6000806200054e620009fc565b6001546002549294509092506001600160a01b03908116911660006200057d620f4240620002e0878962000df9565b9050600062000595620f4240620002e0878a62000df9565b600354909150620005a7908362000e2a565b600355600454620005b9908262000e2a565b600455600554620005cb908862000e2a565b60055560075460405163140e25ad60e31b81526101009091046001600160a01b03169063a0712d689062000604908a90600401620013ee565b600060405180830381600087803b1580156200061f57600080fd5b505af115801562000634573d6000803e3d6000fd5b50506040516323b872dd60e01b81526001600160a01b03871692506323b872dd91506200066a9033903090879060040162001074565b602060405180830381600087803b1580156200068557600080fd5b505af11580156200069a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006c0919062000fad565b620006df5760405162461bcd60e51b8152600401620001e090620011d1565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90620007119033903090869060040162001074565b602060405180830381600087803b1580156200072c57600080fd5b505af115801562000741573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000767919062000fad565b620004f05760405162461bcd60e51b8152600401620001e0906200119a565b60075460ff16620007ab5760405162461bcd60e51b8152600401620001e0906200123d565b60008311620007ce5760405162461bcd60e51b8152600401620001e090620010b1565b6000620007dc848362000e38565b905082811015620008015760405162461bcd60e51b8152600401620001e09062001399565b600080808460018111156200082657634e487b7160e01b600052602160045260246000fd5b14156200086c576003546200083c908762000e2a565b6003556004546200084e908462000e1c565b60045550506001546002546001600160a01b039182169116620008a6565b6003546200087b908462000e1c565b6003556004546200088d908762000e2a565b60045550506002546001546001600160a01b0391821691165b60405163a9059cbb60e01b81526001600160a01b0382169063a9059cbb90620008d6903390879060040162001098565b602060405180830381600087803b158015620008f157600080fd5b505af115801562000906573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092c919062000fad565b6200094757634e487b7160e01b600052600160045260246000fd5b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906200097990339030908b9060040162001074565b602060405180830381600087803b1580156200099457600080fd5b505af1158015620009a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009cf919062000fad565b620009ee5760405162461bcd60e51b8152600401620001e09062001282565b505050505050565b60035481565b60008062000a20600554620002e0620f424060035462000df990919063ffffffff16565b62000a41600554620002e0620f424060045462000df990919063ffffffff16565b915091509091565b62000a5362000f22565b6001600160a01b031662000a6662000aa3565b6001600160a01b03161462000a8f5760405162461bcd60e51b8152600401620001e0906200132f565b62000a9b600062000f26565b565b60055481565b6000546001600160a01b031690565b60045481565b60065481565b62000ac862000f22565b6001600160a01b031662000adb62000aa3565b6001600160a01b03161462000b045760405162461bcd60e51b8152600401620001e0906200132f565b60075460ff161562000b2a5760405162461bcd60e51b8152600401620001e09062001364565b6007805460ff19166001179055604051309062000b479062000f76565b62000b53919062001060565b604051809103906000f08015801562000b70573d6000803e3d6000fd5b5060078054610100600160a81b0319166101006001600160a01b03938416021790556001546002546040516323b872dd60e01b815291831692169082906323b872dd9062000bc79033903090899060040162001074565b602060405180830381600087803b15801562000be257600080fd5b505af115801562000bf7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c1d919062000fad565b62000c3c5760405162461bcd60e51b8152600401620001e090620011d1565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd9062000c6e9033903090889060040162001074565b602060405180830381600087803b15801562000c8957600080fd5b505af115801562000c9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cc4919062000fad565b62000ce35760405162461bcd60e51b8152600401620001e0906200119a565b60035462000cf2908562000e2a565b60035560045462000d04908462000e2a565b6004908155600584905560075460405163140e25ad60e31b81526101009091046001600160a01b03169163a0712d689162000d4291879101620013ee565b600060405180830381600087803b15801562000d5d57600080fd5b505af115801562000d72573d6000803e3d6000fd5b5050505050505050565b62000d8662000f22565b6001600160a01b031662000d9962000aa3565b6001600160a01b03161462000dc25760405162461bcd60e51b8152600401620001e0906200132f565b6001600160a01b03811662000deb5760405162461bcd60e51b8152600401620001e09062001105565b62000df68162000f26565b50565b600062000e07828462001441565b9392505050565b600062000e07828462001420565b600062000e07828462001463565b600062000e07828462001405565b6000808083600181111562000e5d57634e487b7160e01b600052602160045260246000fd5b1462000e6c5760035462000e70565b6004545b905060008084600181111562000e9657634e487b7160e01b600052602160045260246000fd5b1462000ea55760045462000ea9565b6003545b9050600062000ec660035460045462000df990919063ffffffff16565b9050600062000eee62000ee662000ede858a62000e2a565b849062000e0e565b859062000e1c565b905062000f17620f4240620002e0600654620f424062000f0f919062001463565b849062000df9565b979650505050505050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610fb1806200149483390190565b60006020828403121562000f96578081fd5b81356001600160a01b038116811462000e07578182fd5b60006020828403121562000fbf578081fd5b8151801515811462000e07578182fd5b60006020828403121562000fe1578081fd5b5035919050565b60006020828403121562000ffa578081fd5b5051919050565b6000806040838503121562001014578081fd5b50508035926020909101359150565b60008060006060848603121562001038578081fd5b833592506020840135915060408401356002811062001055578182fd5b809150509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208082526034908201527f54686520616d6f756e7420746f2073656c6c2073686f756c642062652073747260408201527334b1ba363c903134b3b3b2b9103a3430b710181760611b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602f908201527f54686520616d6f756e74206f6620737570706c696564206c7020746f6b656e7360408201526e1039b437bab632103132901f10181760891b606082015260800190565b60208082526018908201527f5553444320616d6f756e7420756e617661696c61626c652e0000000000000000604082015260600190565b60208082526018908201527f4c696e6b20616d6f756e7420756e617661696c61626c652e0000000000000000604082015260600190565b6020808252818101527f596f7520646f6e2774206861766520656e6f756768204c5020746f6b656e732e604082015260600190565b60208082526025908201527f54686520706f6f6c2073686f756c6420626520696e697469616c697a6564206660408201526434b939ba1760d91b606082015260800190565b60208082526038908201527f5472616e73666572206f662074686520616d6f756e74206f6620746f6b656e2060408201527f796f752077616e7420746f2073656c6c206661696c65642e0000000000000000606082015260800190565b60208082526030908201527f54686520616d6f756e74206f6620726571756573746564206c7020746f6b656e60408201526f399039b437bab632103132901f10181760811b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f54686520706f6f6c2077617320616c726561647920696e697469616c697a6564604082015260600190565b60208082526035908201527f54686520616d6f756e74206f662070757263686173656420746f6b656e206973604082015274103637bbb2b9103a3430b7103932b8bab4b932b21760591b606082015260800190565b90815260200190565b918252602082015260400190565b600082198211156200141b576200141b6200147d565b500190565b6000826200143c57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156200145e576200145e6200147d565b500290565b6000828210156200147857620014786200147d565b500390565b634e487b7160e01b600052601160045260246000fdfe60806040523480156200001157600080fd5b5060405162000fb138038062000fb1833981016040819052620000349162000174565b604080518082018252600e81526d04c702053696d706c6520537761760941b60208083019182528351808501909452600c84526b04c7053696d706c65537761760a41b9084015281519192916200008e91600391620000ce565b508051620000a4906004906020840190620000ce565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001e1565b828054620000dc90620001a4565b90600052602060002090601f0160209004810192826200010057600085556200014b565b82601f106200011b57805160ff19168380011785556200014b565b828001600101855582156200014b579182015b828111156200014b5782518255916020019190600101906200012e565b50620001599291506200015d565b5090565b5b808211156200015957600081556001016200015e565b60006020828403121562000186578081fd5b81516001600160a01b03811681146200019d578182fd5b9392505050565b600281046001821680620001b957607f821691505b60208210811415620001db57634e487b7160e01b600052602260045260246000fd5b50919050565b610dc080620001f16000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d68146101c0578063a457c2d7146101d3578063a9059cbb146101e6578063dd62ed3e146101f9576100ea565b806370a082311461019257806379cc6790146101a557806395d89b41146101b8576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806342966c681461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f761020c565b60405161010491906109c1565b60405180910390f35b61012061011b366004610975565b61029e565b60405161010491906109b6565b6101356102bb565b6040516101049190610cf3565b61012061015036600461093a565b6102c1565b61015d61035a565b6040516101049190610cfc565b610120610178366004610975565b61035f565b61019061018b36600461099e565b6103b3565b005b6101356101a03660046108e7565b6103d7565b6101906101b3366004610975565b6103f6565b6100f7610449565b6101906101ce36600461099e565b610458565b6101206101e1366004610975565b610479565b6101206101f4366004610975565b6104f2565b610135610207366004610908565b610506565b60606003805461021b90610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d39565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b60006102b26102ab610531565b8484610535565b50600192915050565b60025490565b60006102ce8484846105e9565b6001600160a01b0384166000908152600160205260408120816102ef610531565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561033b5760405162461bcd60e51b815260040161033290610b21565b60405180910390fd5b61034f85610347610531565b858403610535565b506001949350505050565b600690565b60006102b261036c610531565b84846001600061037a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ae9190610d0a565b610535565b6005546001600160a01b031633146103ca57600080fd5b6103d432826103f6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061040483610207610531565b9050818110156104265760405162461bcd60e51b815260040161033290610b69565b61043a83610432610531565b848403610535565b6104448383610713565b505050565b60606004805461021b90610d39565b6005546001600160a01b0316331461046f57600080fd5b6103d43282610804565b60008060016000610488610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d45760405162461bcd60e51b815260040161033290610c77565b6104e86104df610531565b85858403610535565b5060019392505050565b60006102b26104ff610531565b84846105e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661055b5760405162461bcd60e51b815260040161033290610c33565b6001600160a01b0382166105815760405162461bcd60e51b815260040161033290610a99565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dc908590610cf3565b60405180910390a3505050565b6001600160a01b03831661060f5760405162461bcd60e51b815260040161033290610bee565b6001600160a01b0382166106355760405162461bcd60e51b815260040161033290610a14565b610640838383610444565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260040161033290610adb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b0908490610d0a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fa9190610cf3565b60405180910390a361070d848484610444565b50505050565b6001600160a01b0382166107395760405162461bcd60e51b815260040161033290610bad565b61074582600083610444565b6001600160a01b0382166000908152602081905260409020548181101561077e5760405162461bcd60e51b815260040161033290610a57565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107ad908490610d22565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f0908690610cf3565b60405180910390a361044483600084610444565b6001600160a01b03821661082a5760405162461bcd60e51b815260040161033290610cbc565b61083660008383610444565b80600260008282546108489190610d0a565b90915550506001600160a01b03821660009081526020819052604081208054839290610875908490610d0a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108b8908590610cf3565b60405180910390a36108cc60008383610444565b5050565b80356001600160a01b03811681146103f157600080fd5b6000602082840312156108f8578081fd5b610901826108d0565b9392505050565b6000806040838503121561091a578081fd5b610923836108d0565b9150610931602084016108d0565b90509250929050565b60008060006060848603121561094e578081fd5b610957846108d0565b9250610965602085016108d0565b9150604084013590509250925092565b60008060408385031215610987578182fd5b610990836108d0565b946020939093013593505050565b6000602082840312156109af578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109ed578581018301518582016040015282016109d1565b818111156109fe5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d1d57610d1d610d74565b500190565b600082821015610d3457610d34610d74565b500390565b600281046001821680610d4d57607f821691505b60208210811415610d6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202dc867cfc5016eadd909b95d671c13554ccc92586b54969d014f51c08e6f47c264736f6c63430008000033a26469706673582212201283b9cc3ff5e78aaf136ee21f4cdecb3a9d8a7fa4b08b0f07297ebc19e2bb1164736f6c63430008000033",
  "deployedSourceMap": "1225:6022:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5189:1083;;;;;;:::i;:::-;;:::i;:::-;;4103:1080;;;;;;:::i;:::-;;:::i;2744:1353::-;;;;;;:::i;:::-;;:::i;1624:37::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7047:198;;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;:::i;1748:33:7:-;;;:::i;973:85:0:-;;;:::i;:::-;;;;;;;:::i;1686:37:7:-;;;:::i;1811:32::-;;;:::i;1936:802::-;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;5189:1083:7:-;5256:17;;;;5248:67;;;;-1:-1:-1;;;5248:67:7;;;;;;;:::i;:::-;;;;;;;;;5350:1;5333:14;:18;5325:79;;;;-1:-1:-1;;;5325:79:7;;;;;;;:::i;:::-;5422:8;;:30;;-1:-1:-1;;;5422:30:7;;5456:14;;5422:8;;;-1:-1:-1;;;;;5422:8:7;;:18;;:30;;5441:10;;5422:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;5414:93;;;;-1:-1:-1;;;5414:93:7;;;;;;;:::i;:::-;5527:28;5557;5590:17;:15;:17::i;:::-;5526:81;;-1:-1:-1;5526:81:7;-1:-1:-1;5618:28:7;5649:53;5694:7;5649:40;5526:81;5674:14;5649:24;:40::i;:::-;:44;;:53::i;:::-;5618:84;-1:-1:-1;5712:28:7;5743:53;5788:7;5743:40;:20;5768:14;5743:24;:40::i;:53::-;5828:18;;5712:84;;-1:-1:-1;5828:44:7;;5851:20;5828:22;:44::i;:::-;5807:18;:65;5903:18;;:44;;5926:20;5903:22;:44::i;:::-;5882:18;:65;5974:13;;:33;;5992:14;5974:17;:33::i;:::-;5958:13;:49;6018:8;;:29;;-1:-1:-1;;;6018:29:7;;:8;;;;-1:-1:-1;;;;;6018:8:7;;:13;;:29;;6032:14;;6018:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6079:11:7;;6122;;6152:47;;-1:-1:-1;;;6152:47:7;;-1:-1:-1;;;;;6079:11:7;;;;-1:-1:-1;6122:11:7;;;-1:-1:-1;6079:11:7;;6152:13;;:47;;6166:10;;6178:20;;6152:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6145:55;;-1:-1:-1;;;6145:55:7;;;;;;;;;6217:47;;-1:-1:-1;;;6217:47:7;;-1:-1:-1;;;;;6217:13:7;;;;;:47;;6231:10;;6243:20;;6217:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6210:55;;-1:-1:-1;;;6210:55:7;;;;;;;;;5189:1083;;;;;;;:::o;4103:1080::-;4168:17;;;;4160:67;;;;-1:-1:-1;;;4160:67:7;;;;;;;:::i;:::-;4262:1;4245:14;:18;4237:78;;;;-1:-1:-1;;;4237:78:7;;;;;;;:::i;:::-;4326:28;4356;4388:17;:15;:17::i;:::-;4437:11;;4480;;4325:80;;-1:-1:-1;4325:80:7;;-1:-1:-1;;;;;;4437:11:7;;;;4480;4416;4532:53;4577:7;4532:40;4325:80;4557:14;4532:24;:40::i;:53::-;4503:82;-1:-1:-1;4610:26:7;4639:53;4684:7;4639:40;:20;4664:14;4639:24;:40::i;:53::-;4738:18;;4610:82;;-1:-1:-1;4738:42:7;;4761:18;4738:22;:42::i;:::-;4717:18;:63;4811:18;;:42;;4834:18;4811:22;:42::i;:::-;4790:18;:63;4880:13;;:33;;4898:14;4880:17;:33::i;:::-;4864:13;:49;4924:8;;:29;;-1:-1:-1;;;4924:29:7;;:8;;;;-1:-1:-1;;;;;4924:8:7;;:13;;:29;;4938:14;;4924:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4972:64:7;;-1:-1:-1;;;4972:64:7;;-1:-1:-1;;;;;4972:17:7;;;-1:-1:-1;4972:17:7;;-1:-1:-1;4972:64:7;;4990:10;;5010:4;;5017:18;;4972:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4964:101;;;;-1:-1:-1;;;4964:101:7;;;;;;;:::i;:::-;5083:64;;-1:-1:-1;;;5083:64:7;;-1:-1:-1;;;;;5083:17:7;;;;;:64;;5101:10;;5121:4;;5128:18;;5083:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5075:101;;;;-1:-1:-1;;;5075:101:7;;;;;;;:::i;2744:1353::-;2863:17;;;;2855:67;;;;-1:-1:-1;;;2855:67:7;;;;;;;:::i;:::-;2960:1;2940:17;:21;2932:86;;;;-1:-1:-1;;;2932:86:7;;;;;;;:::i;:::-;3028:28;3059:56;3083:17;3102:12;3059:23;:56::i;:::-;3028:87;;3157:23;3133:20;:47;;3125:113;;;;-1:-1:-1;;;3125:113:7;;;;;;;:::i;:::-;3249:16;;;3308:12;:26;;;;;;-1:-1:-1;;;3308:26:7;;;;;;;;;;3304:567;;;3372:18;;:41;;3395:17;3372:22;:41::i;:::-;3350:18;:63;3448:18;;:44;;3471:20;3448:22;:44::i;:::-;3427:18;:65;-1:-1:-1;;3526:11:7;;3573;;-1:-1:-1;;;;;3526:11:7;;;;3573;3304:567;;;3646:18;;:44;;3669:20;3646:22;:44::i;:::-;3625:18;:65;3725:18;;:41;;3748:17;3725:22;:41::i;:::-;3704:18;:62;-1:-1:-1;;3800:11:7;;;3848;-1:-1:-1;;;;;3800:11:7;;;;3848;3304:567;3888:54;;-1:-1:-1;;;3888:54:7;;-1:-1:-1;;;;;3888:20:7;;;;;:54;;3909:10;;3921:20;;3888:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3881:62;;-1:-1:-1;;;3881:62:7;;;;;;;;;3961:68;;-1:-1:-1;;;3961:68:7;;-1:-1:-1;;;;;3961:22:7;;;;;:68;;3984:10;;4004:4;;4011:17;;3961:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3953:137;;;;-1:-1:-1;;;3953:137:7;;;;;;;:::i;:::-;2744:1353;;;;;;:::o;1624:37::-;;;;:::o;7047:198::-;7094:7;7103;7135:50;7171:13;;7135:31;7158:7;7135:18;;:22;;:31;;;;:::i;:50::-;7187;7223:13;;7187:31;7210:7;7187:18;;:22;;:31;;;;:::i;:50::-;7127:111;;;;7047:198;;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;1748:33:7:-;;;;:::o;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;:::o;1686:37:7:-;;;;:::o;1811:32::-;;;;:::o;1936:802::-;1196:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2050:17:7::1;::::0;::::1;;2049:18;2041:63;;;;-1:-1:-1::0;;;2041:63:7::1;;;;;;;:::i;:::-;2114:17;:24:::0;;-1:-1:-1;;2114:24:7::1;2134:4;2114:24;::::0;;2160:31:::1;::::0;2185:4:::1;::::0;2160:31:::1;::::0;::::1;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2149:8:7::1;:42:::0;;-1:-1:-1;;;;;;2149:42:7::1;;-1:-1:-1::0;;;;;2149:42:7;;::::1;;;::::0;;-1:-1:-1;2223:11:7;2266::::1;::::0;2297:64:::1;::::0;-1:-1:-1;;;2297:64:7;;2223:11;;::::1;::::0;2266::::1;::::0;2223;;2297:17:::1;::::0;:64:::1;::::0;2315:10:::1;::::0;2335:4:::1;::::0;2342:18;;2297:64:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2289:101;;;;-1:-1:-1::0;;;2289:101:7::1;;;;;;;:::i;:::-;2408:64;::::0;-1:-1:-1;;;2408:64:7;;-1:-1:-1;;;;;2408:17:7;::::1;::::0;::::1;::::0;:64:::1;::::0;2426:10:::1;::::0;2446:4:::1;::::0;2453:18;;2408:64:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2400:101;;;;-1:-1:-1::0;;;2400:101:7::1;;;;;;;:::i;:::-;2533:18;::::0;:42:::1;::::0;2556:18;2533:22:::1;:42::i;:::-;2512:18;:63:::0;2606:18:::1;::::0;:42:::1;::::0;2629:18;2606:22:::1;:42::i;:::-;2585:18;:63:::0;;;2659:13:::1;:34:::0;;;2703:8:::1;::::0;:28:::1;::::0;-1:-1:-1;;;2703:28:7;;:8:::1;::::0;;::::1;-1:-1:-1::0;;;;;2703:8:7::1;::::0;:13:::1;::::0;:28:::1;::::0;2659:34;;2703:28:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1255:1:0;;1936:802:7::0;;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:0::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3382:96:6:-;3440:7;3466:5;3470:1;3466;:5;:::i;:::-;3459:12;3382:96;-1:-1:-1;;;3382:96:6:o;3767:::-;3825:7;3851:5;3855:1;3851;:5;:::i;3039:96::-;3097:7;3123:5;3127:1;3123;:5;:::i;2672:96::-;2730:7;2756:5;2760:1;2756;:5;:::i;6478:563:7:-;6579:7;;;6615:12;:26;;;;;;-1:-1:-1;;;6615:26:7;;;;;;;;;;6614:70;;6666:18;;6614:70;;;6645:18;;6614:70;6602:82;-1:-1:-1;6694:9:7;;6707:12;:26;;;;;;-1:-1:-1;;;6707:26:7;;;;;;;;;;6706:70;;6758:18;;6706:70;;;6737:18;;6706:70;6694:82;;6787:9;6799:42;6822:18;;6799;;:22;;:42;;;;:::i;:::-;6787:54;-1:-1:-1;6874:29:7;6906:37;6912:30;6918:23;:1;6924:16;6918:5;:23::i;:::-;6912:1;;:5;:30::i;:::-;6906:1;;:5;:37::i;:::-;6874:69;;6981:53;7026:7;6981:40;7017:3;;7007:7;:13;;;;:::i;:::-;6981:21;;:25;:40::i;:53::-;6974:60;6478:563;-1:-1:-1;;;;;;;6478:563:7:o;586:96:5:-;665:10;586:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:306:8:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:8;;220:42;;210:2;;281:6;273;266:22;325:297;;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:8;;697:120;-1:-1:-1;697:120:8:o;822:194::-;;945:2;933:9;924:7;920:23;916:32;913:2;;;966:6;958;951:22;913:2;-1:-1:-1;994:16:8;;903:113;-1:-1:-1;903:113:8:o;1021:258::-;;;1150:2;1138:9;1129:7;1125:23;1121:32;1118:2;;;1171:6;1163;1156:22;1118:2;-1:-1:-1;;1199:23:8;;;1269:2;1254:18;;;1241:32;;-1:-1:-1;1108:171:8:o;1284:421::-;;;;1439:2;1427:9;1418:7;1414:23;1410:32;1407:2;;;1460:6;1452;1445:22;1407:2;1501:9;1488:23;1478:33;;1558:2;1547:9;1543:18;1530:32;1520:42;;1612:2;1601:9;1597:18;1584:32;1645:1;1638:5;1635:12;1625:2;;1666:6;1658;1651:22;1625:2;1694:5;1684:15;;;1397:308;;;;;:::o;1710:203::-;-1:-1:-1;;;;;1874:32:8;;;;1856:51;;1844:2;1829:18;;1811:102::o;1918:375::-;-1:-1:-1;;;;;2176:15:8;;;2158:34;;2228:15;;;;2223:2;2208:18;;2201:43;2275:2;2260:18;;2253:34;;;;2108:2;2093:18;;2075:218::o;2298:274::-;-1:-1:-1;;;;;2490:32:8;;;;2472:51;;2554:2;2539:18;;2532:34;2460:2;2445:18;;2427:145::o;2577:416::-;2779:2;2761:21;;;2818:2;2798:18;;;2791:30;2857:34;2852:2;2837:18;;2830:62;-1:-1:-1;;;2923:2:8;2908:18;;2901:50;2983:3;2968:19;;2751:242::o;2998:402::-;3200:2;3182:21;;;3239:2;3219:18;;;3212:30;3278:34;3273:2;3258:18;;3251:62;-1:-1:-1;;;3344:2:8;3329:18;;3322:36;3390:3;3375:19;;3172:228::o;3405:411::-;3607:2;3589:21;;;3646:2;3626:18;;;3619:30;3685:34;3680:2;3665:18;;3658:62;-1:-1:-1;;;3751:2:8;3736:18;;3729:45;3806:3;3791:19;;3579:237::o;3821:348::-;4023:2;4005:21;;;4062:2;4042:18;;;4035:30;4101:26;4096:2;4081:18;;4074:54;4160:2;4145:18;;3995:174::o;4174:348::-;4376:2;4358:21;;;4415:2;4395:18;;;4388:30;4454:26;4449:2;4434:18;;4427:54;4513:2;4498:18;;4348:174::o;4527:356::-;4729:2;4711:21;;;4748:18;;;4741:30;4807:34;4802:2;4787:18;;4780:62;4874:2;4859:18;;4701:182::o;4888:401::-;5090:2;5072:21;;;5129:2;5109:18;;;5102:30;5168:34;5163:2;5148:18;;5141:62;-1:-1:-1;;;5234:2:8;5219:18;;5212:35;5279:3;5264:19;;5062:227::o;5294:420::-;5496:2;5478:21;;;5535:2;5515:18;;;5508:30;5574:34;5569:2;5554:18;;5547:62;5645:26;5640:2;5625:18;;5618:54;5704:3;5689:19;;5468:246::o;5719:412::-;5921:2;5903:21;;;5960:2;5940:18;;;5933:30;5999:34;5994:2;5979:18;;5972:62;-1:-1:-1;;;6065:2:8;6050:18;;6043:46;6121:3;6106:19;;5893:238::o;6136:356::-;6338:2;6320:21;;;6357:18;;;6350:30;6416:34;6411:2;6396:18;;6389:62;6483:2;6468:18;;6310:182::o;6497:356::-;6699:2;6681:21;;;6718:18;;;6711:30;6777:34;6772:2;6757:18;;6750:62;6844:2;6829:18;;6671:182::o;6858:417::-;7060:2;7042:21;;;7099:2;7079:18;;;7072:30;7138:34;7133:2;7118:18;;7111:62;-1:-1:-1;;;7204:2:8;7189:18;;7182:51;7265:3;7250:19;;7032:243::o;7280:177::-;7426:25;;;7414:2;7399:18;;7381:76::o;7462:248::-;7636:25;;;7692:2;7677:18;;7670:34;7624:2;7609:18;;7591:119::o;7715:128::-;;7786:1;7782:6;7779:1;7776:13;7773:2;;;7792:18;;:::i;:::-;-1:-1:-1;7828:9:8;;7763:80::o;7848:217::-;;7914:1;7904:2;;-1:-1:-1;;;7939:31:8;;7993:4;7990:1;7983:15;8021:4;7946:1;8011:15;7904:2;-1:-1:-1;8050:9:8;;7894:171::o;8070:168::-;;8176:1;8172;8168:6;8164:14;8161:1;8158:21;8153:1;8146:9;8139:17;8135:45;8132:2;;;8183:18;;:::i;:::-;-1:-1:-1;8223:9:8;;8122:116::o;8243:125::-;;8311:1;8308;8305:8;8302:2;;;8316:18;;:::i;:::-;-1:-1:-1;8353:9:8;;8292:76::o;8373:127::-;8434:10;8429:3;8425:20;8422:1;8415:31;8465:4;8462:1;8455:15;8489:4;8486:1;8479:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    1225,
    7247
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xC4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x868C844F GT PUSH3 0x7B JUMPI DUP1 PUSH4 0x868C844F EQ PUSH3 0x156 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x160 JUMPI DUP1 PUSH4 0xB2E411C2 EQ PUSH3 0x179 JUMPI DUP1 PUSH4 0xC57981B5 EQ PUSH3 0x183 JUMPI DUP1 PUSH4 0xCE49EA9A EQ PUSH3 0x18D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x1A4 JUMPI PUSH3 0xC4 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH3 0xC9 JUMPI DUP1 PUSH4 0x35403023 EQ PUSH3 0xE2 JUMPI DUP1 PUSH4 0x5C36D25E EQ PUSH3 0xF9 JUMPI DUP1 PUSH4 0x618E552C EQ PUSH3 0x110 JUMPI DUP1 PUSH4 0x6F5CDB6C EQ PUSH3 0x132 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x14C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xE0 PUSH3 0xDA CALLDATASIZE PUSH1 0x4 PUSH3 0xFCF JUMP JUMPDEST PUSH3 0x1BB JUMP JUMPDEST STOP JUMPDEST PUSH3 0xE0 PUSH3 0xF3 CALLDATASIZE PUSH1 0x4 PUSH3 0xFCF JUMP JUMPDEST PUSH3 0x4F9 JUMP JUMPDEST PUSH3 0xE0 PUSH3 0x10A CALLDATASIZE PUSH1 0x4 PUSH3 0x1023 JUMP JUMPDEST PUSH3 0x786 JUMP JUMPDEST PUSH3 0x11A PUSH3 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x129 SWAP2 SWAP1 PUSH3 0x13EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x13C PUSH3 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x129 SWAP3 SWAP2 SWAP1 PUSH3 0x13F7 JUMP JUMPDEST PUSH3 0xE0 PUSH3 0xA49 JUMP JUMPDEST PUSH3 0x11A PUSH3 0xA9D JUMP JUMPDEST PUSH3 0x16A PUSH3 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x129 SWAP2 SWAP1 PUSH3 0x1060 JUMP JUMPDEST PUSH3 0x11A PUSH3 0xAB2 JUMP JUMPDEST PUSH3 0x11A PUSH3 0xAB8 JUMP JUMPDEST PUSH3 0xE0 PUSH3 0x19E CALLDATASIZE PUSH1 0x4 PUSH3 0x1001 JUMP JUMPDEST PUSH3 0xABE JUMP JUMPDEST PUSH3 0xE0 PUSH3 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH3 0xF84 JUMP JUMPDEST PUSH3 0xD7C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH3 0x1E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x12DF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH3 0x243 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH3 0x1060 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x271 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x297 SWAP2 SWAP1 PUSH3 0xFE8 JUMP JUMPDEST LT ISZERO PUSH3 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x1208 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x2C5 PUSH3 0x9FC JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH3 0x2E7 PUSH3 0xF4240 PUSH3 0x2E0 DUP6 DUP8 PUSH3 0xDF9 JUMP JUMPDEST SWAP1 PUSH3 0xE0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2FF PUSH3 0xF4240 PUSH3 0x2E0 DUP6 DUP9 PUSH3 0xDF9 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH3 0x311 SWAP1 DUP4 PUSH3 0xE1C JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH3 0x323 SWAP1 DUP3 PUSH3 0xE1C JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x5 SLOAD PUSH3 0x335 SWAP1 DUP7 PUSH3 0xE1C JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH3 0x36E SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x13EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x39E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP SWAP2 AND SWAP2 POP DUP3 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH3 0x3DE SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x1098 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x40E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x434 SWAP2 SWAP1 PUSH3 0xFAD JUMP JUMPDEST PUSH3 0x44F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH3 0x47F SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH3 0x1098 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x4AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4D5 SWAP2 SWAP1 PUSH3 0xFAD JUMP JUMPDEST PUSH3 0x4F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH3 0x51E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x123D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x114B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x54E PUSH3 0x9FC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND PUSH1 0x0 PUSH3 0x57D PUSH3 0xF4240 PUSH3 0x2E0 DUP8 DUP10 PUSH3 0xDF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x595 PUSH3 0xF4240 PUSH3 0x2E0 DUP8 DUP11 PUSH3 0xDF9 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH3 0x5A7 SWAP1 DUP4 PUSH3 0xE2A JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH3 0x5B9 SWAP1 DUP3 PUSH3 0xE2A JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x5 SLOAD PUSH3 0x5CB SWAP1 DUP9 PUSH3 0xE2A JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x140E25AD PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA0712D68 SWAP1 PUSH3 0x604 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH3 0x13EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x634 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP PUSH4 0x23B872DD SWAP2 POP PUSH3 0x66A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH3 0x1074 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x69A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x6C0 SWAP2 SWAP1 PUSH3 0xFAD JUMP JUMPDEST PUSH3 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0x711 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH3 0x1074 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x741 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x767 SWAP2 SWAP1 PUSH3 0xFAD JUMP JUMPDEST PUSH3 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x119A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH3 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x123D JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH3 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x10B1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7DC DUP5 DUP4 PUSH3 0xE38 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH3 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x1399 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x826 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH3 0x86C JUMPI PUSH1 0x3 SLOAD PUSH3 0x83C SWAP1 DUP8 PUSH3 0xE2A JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH3 0x84E SWAP1 DUP5 PUSH3 0xE1C JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH3 0x8A6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x87B SWAP1 DUP5 PUSH3 0xE1C JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH3 0x88D SWAP1 DUP8 PUSH3 0xE2A JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH3 0x8D6 SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH3 0x1098 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x906 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x92C SWAP2 SWAP1 PUSH3 0xFAD JUMP JUMPDEST PUSH3 0x947 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0x979 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH3 0x1074 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x9A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x9CF SWAP2 SWAP1 PUSH3 0xFAD JUMP JUMPDEST PUSH3 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x1282 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xA20 PUSH1 0x5 SLOAD PUSH3 0x2E0 PUSH3 0xF4240 PUSH1 0x3 SLOAD PUSH3 0xDF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH3 0xA41 PUSH1 0x5 SLOAD PUSH3 0x2E0 PUSH3 0xF4240 PUSH1 0x4 SLOAD PUSH3 0xDF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH3 0xA53 PUSH3 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xA66 PUSH3 0xAA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x132F JUMP JUMPDEST PUSH3 0xA9B PUSH1 0x0 PUSH3 0xF26 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH3 0xAC8 PUSH3 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xADB PUSH3 0xAA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x132F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0xB2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x1364 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD ADDRESS SWAP1 PUSH3 0xB47 SWAP1 PUSH3 0xF76 JUMP JUMPDEST PUSH3 0xB53 SWAP2 SWAP1 PUSH3 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xB70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND MUL OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0xBC7 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH3 0x1074 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xBE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xBF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC1D SWAP2 SWAP1 PUSH3 0xFAD JUMP JUMPDEST PUSH3 0xC3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0xC6E SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x1074 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xC9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xCC4 SWAP2 SWAP1 PUSH3 0xFAD JUMP JUMPDEST PUSH3 0xCE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x119A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0xCF2 SWAP1 DUP6 PUSH3 0xE2A JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH3 0xD04 SWAP1 DUP5 PUSH3 0xE2A JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x5 DUP5 SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x140E25AD PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA0712D68 SWAP2 PUSH3 0xD42 SWAP2 DUP8 SWAP2 ADD PUSH3 0x13EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xD72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xD86 PUSH3 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xD99 PUSH3 0xAA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x132F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xDEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E0 SWAP1 PUSH3 0x1105 JUMP JUMPDEST PUSH3 0xDF6 DUP2 PUSH3 0xF26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE07 DUP3 DUP5 PUSH3 0x1441 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE07 DUP3 DUP5 PUSH3 0x1420 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE07 DUP3 DUP5 PUSH3 0x1463 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE07 DUP3 DUP5 PUSH3 0x1405 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xE5D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH3 0xE6C JUMPI PUSH1 0x3 SLOAD PUSH3 0xE70 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xE96 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH3 0xEA5 JUMPI PUSH1 0x4 SLOAD PUSH3 0xEA9 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xEC6 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH3 0xDF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xEEE PUSH3 0xEE6 PUSH3 0xEDE DUP6 DUP11 PUSH3 0xE2A JUMP JUMPDEST DUP5 SWAP1 PUSH3 0xE0E JUMP JUMPDEST DUP6 SWAP1 PUSH3 0xE1C JUMP JUMPDEST SWAP1 POP PUSH3 0xF17 PUSH3 0xF4240 PUSH3 0x2E0 PUSH1 0x6 SLOAD PUSH3 0xF4240 PUSH3 0xF0F SWAP2 SWAP1 PUSH3 0x1463 JUMP JUMPDEST DUP5 SWAP1 PUSH3 0xDF9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xFB1 DUP1 PUSH3 0x1494 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF96 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xE07 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xFBF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0xE07 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xFE1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xFFA JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1014 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1038 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH3 0x1055 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E7420746F2073656C6C2073686F756C6420626520737472 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x34B1BA363C903134B3B3B2B9103A3430B7101817 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E74206F6620737570706C696564206C7020746F6B656E73 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x1039B437BAB632103132901F101817 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553444320616D6F756E7420756E617661696C61626C652E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C696E6B20616D6F756E7420756E617661696C61626C652E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768204C5020746F6B656E732E PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520706F6F6C2073686F756C6420626520696E697469616C697A65642066 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x34B939BA17 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F662074686520616D6F756E74206F6620746F6B656E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x796F752077616E7420746F2073656C6C206661696C65642E0000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E74206F6620726571756573746564206C7020746F6B656E PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x399039B437BAB632103132901F101817 PUSH1 0x81 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x54686520706F6F6C2077617320616C726561647920696E697469616C697A6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E74206F662070757263686173656420746F6B656E206973 PUSH1 0x40 DUP3 ADD MSTORE PUSH21 0x103637BBB2B9103A3430B7103932B8BAB4B932B217 PUSH1 0x59 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x141B JUMPI PUSH3 0x141B PUSH3 0x147D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x143C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x145E JUMPI PUSH3 0x145E PUSH3 0x147D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x1478 JUMPI PUSH3 0x1478 PUSH3 0x147D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFB1 CODESIZE SUB DUP1 PUSH3 0xFB1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x174 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x4C702053696D706C65205377617 PUSH1 0x94 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0xC DUP5 MSTORE PUSH12 0x4C7053696D706C655377617 PUSH1 0xA4 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x8E SWAP2 PUSH1 0x3 SWAP2 PUSH3 0xCE JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xA4 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xCE JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x1E1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xDC SWAP1 PUSH3 0x1A4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x100 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x14B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x11B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x14B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x14B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x14B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x12E JUMP JUMPDEST POP PUSH3 0x159 SWAP3 SWAP2 POP PUSH3 0x15D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x159 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x15E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x186 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x19D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC0 DUP1 PUSH3 0x1F1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B8 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x17D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x120 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x247 SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x294 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x269 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x294 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x277 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x2AB PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP5 DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2EF PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34F DUP6 PUSH2 0x347 PUSH2 0x531 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x36C PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x37A PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x3F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP4 PUSH2 0x207 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x43A DUP4 PUSH2 0x432 PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x713 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x488 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x4DF PUSH2 0x531 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x4FF PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5DC SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x640 DUP4 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B0 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x444 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x745 DUP3 PUSH1 0x0 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH2 0xD22 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7F0 SWAP1 DUP7 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x444 DUP4 PUSH1 0x0 DUP5 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x875 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x8B8 SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8CC PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x901 DUP3 PUSH2 0x8D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x923 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x931 PUSH1 0x20 DUP5 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x94E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x957 DUP5 PUSH2 0x8D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x965 PUSH1 0x20 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x987 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x990 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9ED JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9D1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9FE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0xD74 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD34 PUSH2 0xD74 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD4D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xC8 PUSH8 0xCFC5016EADD909B9 0x5D PUSH8 0x1C13554CCC92586B SLOAD SWAP7 SWAP14 ADD 0x4F MLOAD 0xC0 DUP15 PUSH16 0x47C264736F6C63430008000033A26469 PUSH17 0x6673582212201283B9CC3FF5E78AAF136E 0xE2 0x1F 0x4C 0xDE 0xCB GASPRICE SWAP14 DUP11 PUSH32 0xA4B08B0F07297EBC19E2BB1164736F6C63430008000033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x11"
    },
    "12": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "16": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "REVERT",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "POP",
      "path": "7"
    },
    "19": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "21": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "LT",
      "path": "7"
    },
    "23": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xC4"
    },
    "27": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "28": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "33": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "SHR",
      "path": "7"
    },
    "34": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "35": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x868C844F"
    },
    "40": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "GT",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x7B"
    },
    "45": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "46": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "47": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x868C844F"
    },
    "52": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x156"
    },
    "57": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "58": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "59": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "64": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x160"
    },
    "69": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "70": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "71": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB2E411C2"
    },
    "76": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x179"
    },
    "81": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "82": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xC57981B5"
    },
    "88": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "89": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x183"
    },
    "93": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "95": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xCE49EA9A"
    },
    "100": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "101": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x18D"
    },
    "105": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "106": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "107": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "112": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1A4"
    },
    "117": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "118": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xC4"
    },
    "122": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMP",
      "path": "7"
    },
    "123": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "124": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2E1A7D4D"
    },
    "130": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "131": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xC9"
    },
    "135": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x35403023"
    },
    "142": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE2"
    },
    "147": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "149": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x5C36D25E"
    },
    "154": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "155": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF9"
    },
    "159": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "160": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "161": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x618E552C"
    },
    "166": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "167": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x110"
    },
    "171": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "172": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "173": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6F5CDB6C"
    },
    "178": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "179": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x132"
    },
    "183": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "184": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "190": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "EQ",
      "path": "7"
    },
    "191": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x14C"
    },
    "195": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "199": {
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "DUP1",
      "path": "7"
    },
    "200": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1225,
        7247
      ],
      "op": "REVERT",
      "path": "7"
    },
    "201": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "202": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE0"
    },
    "206": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xDA"
    },
    "210": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "211": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "213": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFCF"
    },
    "217": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5189,
        6272
      ],
      "op": "JUMP",
      "path": "7"
    },
    "218": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "219": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1BB"
    },
    "223": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5189,
        6272
      ],
      "op": "JUMP",
      "path": "7"
    },
    "224": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "225": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "STOP",
      "path": "7"
    },
    "226": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4103,
        5183
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "227": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4103,
        5183
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE0"
    },
    "231": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4103,
        5183
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF3"
    },
    "235": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4103,
        5183
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "236": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4103,
        5183
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "238": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4103,
        5183
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFCF"
    },
    "242": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4103,
        5183
      ],
      "op": "JUMP",
      "path": "7"
    },
    "243": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4103,
        5183
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "244": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4103,
        5183
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x4F9"
    },
    "248": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4103,
        5183
      ],
      "op": "JUMP",
      "path": "7"
    },
    "249": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "250": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE0"
    },
    "254": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x10A"
    },
    "258": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "259": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "261": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1023"
    },
    "265": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        2744,
        4097
      ],
      "op": "JUMP",
      "path": "7"
    },
    "266": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "267": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x786"
    },
    "271": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        2744,
        4097
      ],
      "op": "JUMP",
      "path": "7"
    },
    "272": {
      "offset": [
        1624,
        1661
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "273": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x11A"
    },
    "277": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x9F6"
    },
    "281": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        1624,
        1661
      ],
      "op": "JUMP",
      "path": "7"
    },
    "282": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "283": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "285": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "286": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x129"
    },
    "290": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "291": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "292": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x13EE"
    },
    "296": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        1624,
        1661
      ],
      "op": "JUMP",
      "path": "7"
    },
    "297": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "298": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "300": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "301": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "DUP1",
      "path": "7"
    },
    "302": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "303": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "SUB",
      "path": "7"
    },
    "304": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "305": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "RETURN",
      "path": "7"
    },
    "306": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "307": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x13C"
    },
    "311": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x9FC"
    },
    "315": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "jump": "i",
      "offset": [
        7047,
        7245
      ],
      "op": "JUMP",
      "path": "7"
    },
    "316": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "317": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "319": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "320": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x129"
    },
    "324": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "325": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "326": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "327": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x13F7"
    },
    "331": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "jump": "i",
      "offset": [
        7047,
        7245
      ],
      "op": "JUMP",
      "path": "7"
    },
    "332": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "333": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xE0"
    },
    "337": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xA49"
    },
    "341": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "342": {
      "offset": [
        1748,
        1781
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1748,
        1781
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x11A"
    },
    "347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1748,
        1781
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xA9D"
    },
    "351": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1748,
        1781
      ],
      "op": "JUMP",
      "path": "7"
    },
    "352": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "353": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x16A"
    },
    "357": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xAA3"
    },
    "361": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "362": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "363": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "365": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "366": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x129"
    },
    "370": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "371": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "372": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1060"
    },
    "376": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "377": {
      "offset": [
        1686,
        1723
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "378": {
      "fn": "Ownable.owner",
      "offset": [
        1686,
        1723
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x11A"
    },
    "382": {
      "fn": "Ownable.owner",
      "offset": [
        1686,
        1723
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xAB2"
    },
    "386": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1686,
        1723
      ],
      "op": "JUMP",
      "path": "7"
    },
    "387": {
      "offset": [
        1811,
        1843
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "388": {
      "fn": "Ownable.owner",
      "offset": [
        1811,
        1843
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x11A"
    },
    "392": {
      "fn": "Ownable.owner",
      "offset": [
        1811,
        1843
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xAB8"
    },
    "396": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1811,
        1843
      ],
      "op": "JUMP",
      "path": "7"
    },
    "397": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "398": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE0"
    },
    "402": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x19E"
    },
    "406": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "407": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "409": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1001"
    },
    "413": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        1936,
        2738
      ],
      "op": "JUMP",
      "path": "7"
    },
    "414": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "415": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xABE"
    },
    "419": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        1936,
        2738
      ],
      "op": "JUMP",
      "path": "7"
    },
    "420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xE0"
    },
    "425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1B5"
    },
    "429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "430": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF84"
    },
    "436": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD7C"
    },
    "442": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "443": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "444": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5256,
        5273
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x7"
    },
    "446": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5256,
        5273
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "447": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5256,
        5273
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "449": {
      "branch": 52,
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5256,
        5273
      ],
      "op": "AND",
      "path": "7"
    },
    "450": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E9"
    },
    "454": {
      "branch": 52,
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "455": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "457": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "464": {
      "op": "SHL"
    },
    "465": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "DUP2",
      "path": "7"
    },
    "466": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "467": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "469": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "ADD",
      "path": "7"
    },
    "470": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "474": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "475": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x123D"
    },
    "479": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5248,
        5315
      ],
      "op": "JUMP",
      "path": "7"
    },
    "480": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "481": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "483": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "484": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "DUP1",
      "path": "7"
    },
    "485": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "486": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "SUB",
      "path": "7"
    },
    "487": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "488": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "489": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5248,
        5315
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "490": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5350,
        5351
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 1,
      "value": "0x0"
    },
    "492": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5333,
        5347
      ],
      "op": "DUP2",
      "path": "7"
    },
    "493": {
      "branch": 53,
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5333,
        5351
      ],
      "op": "GT",
      "path": "7"
    },
    "494": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x20C"
    },
    "498": {
      "branch": 53,
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "499": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "501": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "502": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "506": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "508": {
      "op": "SHL"
    },
    "509": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "DUP2",
      "path": "7"
    },
    "510": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "511": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "513": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "ADD",
      "path": "7"
    },
    "514": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "518": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "519": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x12DF"
    },
    "523": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5325,
        5404
      ],
      "op": "JUMP",
      "path": "7"
    },
    "524": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5325,
        5404
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "525": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5430
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0x7"
    },
    "527": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5430
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "528": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "530": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "531": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "536": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "538": {
      "op": "SHL"
    },
    "539": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP2",
      "path": "7"
    },
    "540": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "541": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5456,
        5470
      ],
      "op": "DUP3",
      "path": "7"
    },
    "542": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5456,
        5470
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "543": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5430
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "546": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5430
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "547": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5430
      ],
      "op": "DIV",
      "path": "7"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "554": {
      "op": "SHL"
    },
    "555": {
      "op": "SUB"
    },
    "556": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5430
      ],
      "op": "AND",
      "path": "7"
    },
    "557": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5430
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "558": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5440
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "563": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5440
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "564": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x243"
    },
    "568": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "569": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5441,
        5451
      ],
      "op": "CALLER",
      "path": "7"
    },
    "570": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5441,
        5451
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "571": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "573": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "ADD",
      "path": "7"
    },
    "574": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1060"
    },
    "578": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5422,
        5452
      ],
      "op": "JUMP",
      "path": "7"
    },
    "579": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "580": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "582": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "584": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "585": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP1",
      "path": "7"
    },
    "586": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP4",
      "path": "7"
    },
    "587": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "SUB",
      "path": "7"
    },
    "588": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP2",
      "path": "7"
    },
    "589": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP7",
      "path": "7"
    },
    "590": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP1",
      "path": "7"
    },
    "591": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "592": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "593": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP1",
      "path": "7"
    },
    "594": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "595": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x25C"
    },
    "599": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "600": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "602": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP1",
      "path": "7"
    },
    "603": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "REVERT",
      "path": "7"
    },
    "604": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "605": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "POP",
      "path": "7"
    },
    "606": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "GAS",
      "path": "7"
    },
    "607": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "608": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "609": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP1",
      "path": "7"
    },
    "610": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "611": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x271"
    },
    "615": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "616": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "617": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "619": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP1",
      "path": "7"
    },
    "620": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "621": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "622": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "624": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "REVERT",
      "path": "7"
    },
    "625": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "626": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "POP",
      "path": "7"
    },
    "627": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "POP",
      "path": "7"
    },
    "628": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "POP",
      "path": "7"
    },
    "629": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "POP",
      "path": "7"
    },
    "630": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "632": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "633": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "634": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "636": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "NOT",
      "path": "7"
    },
    "637": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "639": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP3",
      "path": "7"
    },
    "640": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "ADD",
      "path": "7"
    },
    "641": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "AND",
      "path": "7"
    },
    "642": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP3",
      "path": "7"
    },
    "643": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "ADD",
      "path": "7"
    },
    "644": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP1",
      "path": "7"
    },
    "645": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "647": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "648": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "POP",
      "path": "7"
    },
    "649": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "DUP2",
      "path": "7"
    },
    "650": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "ADD",
      "path": "7"
    },
    "651": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "652": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x297"
    },
    "656": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "657": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "658": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFE8"
    },
    "662": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5422,
        5452
      ],
      "op": "JUMP",
      "path": "7"
    },
    "663": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5452
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "664": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5470
      ],
      "op": "LT",
      "path": "7"
    },
    "665": {
      "branch": 54,
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5422,
        5470
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "666": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2B8"
    },
    "670": {
      "branch": 54,
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "671": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "673": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "DUP2",
      "path": "7"
    },
    "682": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "683": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "685": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "ADD",
      "path": "7"
    },
    "686": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "690": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "691": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1208"
    },
    "695": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5414,
        5507
      ],
      "op": "JUMP",
      "path": "7"
    },
    "696": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5414,
        5507
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "697": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5527,
        5555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "699": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5557,
        5585
      ],
      "op": "DUP1",
      "path": "7"
    },
    "700": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5590,
        5607
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2C5"
    },
    "704": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5590,
        5605
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x9FC"
    },
    "708": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5590,
        5607
      ],
      "op": "JUMP",
      "path": "7"
    },
    "709": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5590,
        5607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "710": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5526,
        5607
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "711": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5526,
        5607
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "712": {
      "op": "POP"
    },
    "713": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5526,
        5607
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "714": {
      "op": "POP"
    },
    "715": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5618,
        5646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "717": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5649,
        5702
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2E7"
    },
    "721": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5694,
        5701
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "725": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2E0"
    },
    "729": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5526,
        5607
      ],
      "op": "DUP6",
      "path": "7"
    },
    "730": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5674,
        5688
      ],
      "op": "DUP8",
      "path": "7"
    },
    "731": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5649,
        5673
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xDF9"
    },
    "735": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5649,
        5689
      ],
      "op": "JUMP",
      "path": "7"
    },
    "736": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "737": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5649,
        5693
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "738": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5649,
        5693
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE0E"
    },
    "742": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5649,
        5702
      ],
      "op": "JUMP",
      "path": "7"
    },
    "743": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5649,
        5702
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "744": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5618,
        5702
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5712,
        5740
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "748": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5743,
        5796
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2FF"
    },
    "752": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5788,
        5795
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "756": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5743,
        5783
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2E0"
    },
    "760": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5743,
        5763
      ],
      "op": "DUP6",
      "path": "7"
    },
    "761": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5768,
        5782
      ],
      "op": "DUP9",
      "path": "7"
    },
    "762": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5743,
        5767
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xDF9"
    },
    "766": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5743,
        5783
      ],
      "op": "JUMP",
      "path": "7"
    },
    "767": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5743,
        5796
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "768": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5828,
        5846
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 3,
      "value": "0x3"
    },
    "770": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5828,
        5846
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "771": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5712,
        5796
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "772": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5712,
        5796
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "773": {
      "op": "POP"
    },
    "774": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5828,
        5872
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x311"
    },
    "778": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5828,
        5872
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "779": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5851,
        5871
      ],
      "op": "DUP4",
      "path": "7"
    },
    "780": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5828,
        5850
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE1C"
    },
    "784": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5828,
        5872
      ],
      "op": "JUMP",
      "path": "7"
    },
    "785": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5828,
        5872
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "786": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5807,
        5825
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "788": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5807,
        5872
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "789": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5903,
        5921
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x4"
    },
    "791": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5903,
        5921
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "792": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5903,
        5947
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x323"
    },
    "796": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5903,
        5947
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "797": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5926,
        5946
      ],
      "op": "DUP3",
      "path": "7"
    },
    "798": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5903,
        5925
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE1C"
    },
    "802": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5903,
        5947
      ],
      "op": "JUMP",
      "path": "7"
    },
    "803": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5903,
        5947
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "804": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5882,
        5900
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "806": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5882,
        5947
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "807": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5974,
        5987
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x5"
    },
    "809": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5974,
        5987
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "810": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5974,
        6007
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x335"
    },
    "814": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5974,
        6007
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "815": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5992,
        6006
      ],
      "op": "DUP7",
      "path": "7"
    },
    "816": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5974,
        5991
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE1C"
    },
    "820": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        5974,
        6007
      ],
      "op": "JUMP",
      "path": "7"
    },
    "821": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5974,
        6007
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "822": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5958,
        5971
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "824": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5958,
        6007
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "825": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6026
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 6,
      "value": "0x7"
    },
    "827": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6026
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "828": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "830": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "831": {
      "op": "PUSH4",
      "value": "0x852CD8D"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP2",
      "path": "7"
    },
    "840": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "841": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6026
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "844": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6026
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "845": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6026
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "846": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6026
      ],
      "op": "DIV",
      "path": "7"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "853": {
      "op": "SHL"
    },
    "854": {
      "op": "SUB"
    },
    "855": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6026
      ],
      "op": "AND",
      "path": "7"
    },
    "856": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6026
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "857": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6031
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x42966C68"
    },
    "862": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6031
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "863": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x36E"
    },
    "867": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "868": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6032,
        6046
      ],
      "op": "DUP9",
      "path": "7"
    },
    "869": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6032,
        6046
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "870": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "872": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "ADD",
      "path": "7"
    },
    "873": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x13EE"
    },
    "877": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        6018,
        6047
      ],
      "op": "JUMP",
      "path": "7"
    },
    "878": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "879": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "881": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "883": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "884": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP1",
      "path": "7"
    },
    "885": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP4",
      "path": "7"
    },
    "886": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "SUB",
      "path": "7"
    },
    "887": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP2",
      "path": "7"
    },
    "888": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "890": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP8",
      "path": "7"
    },
    "891": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP1",
      "path": "7"
    },
    "892": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "893": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "894": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP1",
      "path": "7"
    },
    "895": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "896": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x389"
    },
    "900": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "901": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "903": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP1",
      "path": "7"
    },
    "904": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "REVERT",
      "path": "7"
    },
    "905": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "906": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "POP",
      "path": "7"
    },
    "907": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "GAS",
      "path": "7"
    },
    "908": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "CALL",
      "path": "7"
    },
    "909": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "910": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP1",
      "path": "7"
    },
    "911": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "912": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x39E"
    },
    "916": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "917": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "918": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "920": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "DUP1",
      "path": "7"
    },
    "921": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "922": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "923": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "925": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "REVERT",
      "path": "7"
    },
    "926": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6018,
        6047
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6079,
        6090
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "931": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6079,
        6090
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "932": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6122,
        6133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "934": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6122,
        6133
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "935": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x40"
    },
    "937": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "938": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP2",
      "path": "7"
    },
    "947": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "954": {
      "op": "SHL"
    },
    "955": {
      "op": "SUB"
    },
    "956": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6079,
        6090
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "957": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6079,
        6090
      ],
      "op": "DUP4",
      "path": "7"
    },
    "958": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6079,
        6090
      ],
      "op": "AND",
      "path": "7"
    },
    "959": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6079,
        6090
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6122,
        6133
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "962": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6122,
        6133
      ],
      "op": "AND",
      "path": "7"
    },
    "963": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6122,
        6133
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "964": {
      "op": "POP"
    },
    "965": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6079,
        6090
      ],
      "op": "DUP3",
      "path": "7"
    },
    "966": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6079,
        6090
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "967": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6165
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "972": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "973": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x3DE"
    },
    "977": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "978": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6166,
        6176
      ],
      "op": "CALLER",
      "path": "7"
    },
    "979": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6166,
        6176
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "980": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6178,
        6198
      ],
      "op": "DUP9",
      "path": "7"
    },
    "981": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6178,
        6198
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "982": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "984": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "ADD",
      "path": "7"
    },
    "985": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1098"
    },
    "989": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        6152,
        6199
      ],
      "op": "JUMP",
      "path": "7"
    },
    "990": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "991": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "993": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "995": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "996": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP1",
      "path": "7"
    },
    "997": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP4",
      "path": "7"
    },
    "998": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "SUB",
      "path": "7"
    },
    "999": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1000": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1002": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1003": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1004": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "1005": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1006": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1007": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1008": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x3F9"
    },
    "1012": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1013": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1015": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1016": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1017": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1018": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "POP",
      "path": "7"
    },
    "1019": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "GAS",
      "path": "7"
    },
    "1020": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "CALL",
      "path": "7"
    },
    "1021": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1022": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1023": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1024": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x40E"
    },
    "1028": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1029": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1030": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1032": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1033": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1034": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1035": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1037": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1038": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1039": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "POP",
      "path": "7"
    },
    "1040": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "POP",
      "path": "7"
    },
    "1041": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "POP",
      "path": "7"
    },
    "1042": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "POP",
      "path": "7"
    },
    "1043": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1045": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1046": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1047": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1049": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "NOT",
      "path": "7"
    },
    "1050": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1052": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1053": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "ADD",
      "path": "7"
    },
    "1054": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "AND",
      "path": "7"
    },
    "1055": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1056": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "ADD",
      "path": "7"
    },
    "1057": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1058": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1060": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1061": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "POP",
      "path": "7"
    },
    "1062": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1063": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "ADD",
      "path": "7"
    },
    "1064": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1065": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x434"
    },
    "1069": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1070": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1071": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFAD"
    },
    "1075": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        6152,
        6199
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1076": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6152,
        6199
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1077": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x44F"
    },
    "1081": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1082": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1092": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1093": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1095": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1097": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1098": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "1100": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1102": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1103": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6145,
        6200
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1104": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0x40"
    },
    "1106": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1107": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1114": {
      "op": "SHL"
    },
    "1115": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1116": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1123": {
      "op": "SHL"
    },
    "1124": {
      "op": "SUB"
    },
    "1125": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6230
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1126": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6230
      ],
      "op": "AND",
      "path": "7"
    },
    "1127": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6230
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1128": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6230
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "1133": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6230
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1134": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x47F"
    },
    "1138": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1139": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6231,
        6241
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1140": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6231,
        6241
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1141": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6243,
        6263
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1142": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6243,
        6263
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1143": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1145": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "ADD",
      "path": "7"
    },
    "1146": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1098"
    },
    "1150": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        6217,
        6264
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1151": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1152": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1154": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1156": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1157": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1158": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1159": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "SUB",
      "path": "7"
    },
    "1160": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1161": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1163": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1164": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1165": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "1166": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1167": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1168": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1169": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x49A"
    },
    "1173": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1174": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1176": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1177": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1178": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1179": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "POP",
      "path": "7"
    },
    "1180": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "GAS",
      "path": "7"
    },
    "1181": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "CALL",
      "path": "7"
    },
    "1182": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1183": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1184": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1185": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x4AF"
    },
    "1189": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1190": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1191": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1193": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1194": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1195": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1196": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1198": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1199": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1200": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "POP",
      "path": "7"
    },
    "1201": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "POP",
      "path": "7"
    },
    "1202": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "POP",
      "path": "7"
    },
    "1203": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "POP",
      "path": "7"
    },
    "1204": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1206": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1207": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1208": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1210": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "NOT",
      "path": "7"
    },
    "1211": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1213": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1214": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "ADD",
      "path": "7"
    },
    "1215": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "AND",
      "path": "7"
    },
    "1216": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1217": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "ADD",
      "path": "7"
    },
    "1218": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1219": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1221": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1222": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "POP",
      "path": "7"
    },
    "1223": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1224": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "ADD",
      "path": "7"
    },
    "1225": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1226": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x4D5"
    },
    "1230": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1231": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1232": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFAD"
    },
    "1236": {
      "fn": "SimpleSwap.withdraw",
      "jump": "i",
      "offset": [
        6217,
        6264
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1237": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6217,
        6264
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1238": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x4F0"
    },
    "1242": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1243": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1250": {
      "op": "SHL"
    },
    "1251": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1253": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1254": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1256": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1258": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1259": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "1261": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1263": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1264": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        6210,
        6265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1265": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "POP",
      "path": "7"
    },
    "1266": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "POP",
      "path": "7"
    },
    "1267": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "POP",
      "path": "7"
    },
    "1268": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "POP",
      "path": "7"
    },
    "1269": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "POP",
      "path": "7"
    },
    "1270": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "POP",
      "path": "7"
    },
    "1271": {
      "fn": "SimpleSwap.withdraw",
      "offset": [
        5189,
        6272
      ],
      "op": "POP",
      "path": "7"
    },
    "1272": {
      "fn": "SimpleSwap.withdraw",
      "jump": "o",
      "offset": [
        5189,
        6272
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1273": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4103,
        5183
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1274": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4168,
        4185
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 9,
      "value": "0x7"
    },
    "1276": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4168,
        4185
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1277": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4168,
        4185
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1279": {
      "branch": 55,
      "fn": "SimpleSwap.supply",
      "offset": [
        4168,
        4185
      ],
      "op": "AND",
      "path": "7"
    },
    "1280": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x51E"
    },
    "1284": {
      "branch": 55,
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1285": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1287": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1296": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1297": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1299": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "ADD",
      "path": "7"
    },
    "1300": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "1304": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1305": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x123D"
    },
    "1309": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4160,
        4227
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1310": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4160,
        4227
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1311": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4262,
        4263
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 10,
      "value": "0x0"
    },
    "1313": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4245,
        4259
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1314": {
      "branch": 56,
      "fn": "SimpleSwap.supply",
      "offset": [
        4245,
        4263
      ],
      "op": "GT",
      "path": "7"
    },
    "1315": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x541"
    },
    "1319": {
      "branch": 56,
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1320": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1322": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1329": {
      "op": "SHL"
    },
    "1330": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1331": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1332": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1334": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "ADD",
      "path": "7"
    },
    "1335": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "1339": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1340": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x114B"
    },
    "1344": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4237,
        4315
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1345": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4237,
        4315
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1346": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4326,
        4354
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1348": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4356,
        4384
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1349": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4388,
        4405
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x54E"
    },
    "1353": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4388,
        4403
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x9FC"
    },
    "1357": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4388,
        4405
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1358": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4388,
        4405
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1359": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4437,
        4448
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1361": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4437,
        4448
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1362": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4480,
        4491
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1364": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4480,
        4491
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1365": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4325,
        4405
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1366": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4325,
        4405
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4325,
        4405
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1369": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4325,
        4405
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1377": {
      "op": "SHL"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4437,
        4448
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1380": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4437,
        4448
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1381": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4437,
        4448
      ],
      "op": "AND",
      "path": "7"
    },
    "1382": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4437,
        4448
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1383": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4480,
        4491
      ],
      "op": "AND",
      "path": "7"
    },
    "1384": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4416,
        4427
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1386": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4532,
        4585
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x57D"
    },
    "1390": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4577,
        4584
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "1394": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4532,
        4572
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2E0"
    },
    "1398": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4325,
        4405
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1399": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4557,
        4571
      ],
      "op": "DUP10",
      "path": "7"
    },
    "1400": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4532,
        4556
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xDF9"
    },
    "1404": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4532,
        4572
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1405": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4532,
        4585
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1406": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4503,
        4585
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1407": {
      "op": "POP"
    },
    "1408": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4610,
        4636
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1410": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4639,
        4692
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x595"
    },
    "1414": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4684,
        4691
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "1418": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4639,
        4679
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2E0"
    },
    "1422": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4639,
        4659
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1423": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4664,
        4678
      ],
      "op": "DUP11",
      "path": "7"
    },
    "1424": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4639,
        4663
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xDF9"
    },
    "1428": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4639,
        4679
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1429": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4639,
        4692
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1430": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4738,
        4756
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x3"
    },
    "1432": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4738,
        4756
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1433": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4610,
        4692
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1434": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4610,
        4692
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1435": {
      "op": "POP"
    },
    "1436": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4738,
        4780
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x5A7"
    },
    "1440": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4738,
        4780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1441": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4761,
        4779
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1442": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4738,
        4760
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE2A"
    },
    "1446": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4738,
        4780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1447": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4738,
        4780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1448": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4717,
        4735
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1450": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4717,
        4780
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1451": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4811,
        4829
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 12,
      "value": "0x4"
    },
    "1453": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4811,
        4829
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1454": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4811,
        4853
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x5B9"
    },
    "1458": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4811,
        4853
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1459": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4834,
        4852
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1460": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4811,
        4833
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE2A"
    },
    "1464": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4811,
        4853
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1465": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4811,
        4853
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1466": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4790,
        4808
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1468": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4790,
        4853
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1469": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4880,
        4893
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 13,
      "value": "0x5"
    },
    "1471": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4880,
        4893
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1472": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4880,
        4913
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x5CB"
    },
    "1476": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4880,
        4913
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1477": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4898,
        4912
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1478": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4880,
        4897
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE2A"
    },
    "1482": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4880,
        4913
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1483": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4880,
        4913
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1484": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4864,
        4877
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1486": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4864,
        4913
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1487": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4932
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 14,
      "value": "0x7"
    },
    "1489": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4932
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1490": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1492": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1493": {
      "op": "PUSH4",
      "value": "0x140E25AD"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1502": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1503": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4932
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1506": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4932
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1507": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4932
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1508": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4932
      ],
      "op": "DIV",
      "path": "7"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4932
      ],
      "op": "AND",
      "path": "7"
    },
    "1518": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4932
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1519": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4937
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA0712D68"
    },
    "1524": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1525": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x604"
    },
    "1529": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1530": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4938,
        4952
      ],
      "op": "DUP11",
      "path": "7"
    },
    "1531": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4938,
        4952
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1532": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1534": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "ADD",
      "path": "7"
    },
    "1535": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x13EE"
    },
    "1539": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4924,
        4953
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1540": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1541": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1543": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1545": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1546": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1547": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1548": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "SUB",
      "path": "7"
    },
    "1549": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1550": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1552": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1553": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1554": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "1555": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1556": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1557": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1558": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x61F"
    },
    "1562": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1563": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1565": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1566": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1567": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1568": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "POP",
      "path": "7"
    },
    "1569": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "GAS",
      "path": "7"
    },
    "1570": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "CALL",
      "path": "7"
    },
    "1571": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1572": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1573": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1574": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x634"
    },
    "1578": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1579": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1580": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1582": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1583": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1584": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1585": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1587": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1588": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4924,
        4953
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 15,
      "value": "0x40"
    },
    "1593": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1594": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1601": {
      "op": "SHL"
    },
    "1602": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1603": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "op": "SUB"
    },
    "1612": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        4989
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1613": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        4989
      ],
      "op": "AND",
      "path": "7"
    },
    "1614": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        4989
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1615": {
      "op": "POP"
    },
    "1616": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        4989
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "1621": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        4989
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1622": {
      "op": "POP"
    },
    "1623": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x66A"
    },
    "1627": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1628": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4990,
        5000
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1629": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4990,
        5000
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1630": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5010,
        5014
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "1631": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5010,
        5014
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1632": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5017,
        5035
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1633": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5017,
        5035
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1634": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1636": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "ADD",
      "path": "7"
    },
    "1637": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1074"
    },
    "1641": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4972,
        5036
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1642": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1643": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1645": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1647": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1648": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1649": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1650": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "SUB",
      "path": "7"
    },
    "1651": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1652": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1654": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1655": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1656": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "1657": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1658": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1659": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1660": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x685"
    },
    "1664": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1665": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1667": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1668": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1669": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1670": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "POP",
      "path": "7"
    },
    "1671": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "GAS",
      "path": "7"
    },
    "1672": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "CALL",
      "path": "7"
    },
    "1673": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1674": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1675": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1676": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x69A"
    },
    "1680": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1681": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1682": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1684": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1685": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1686": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1687": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1689": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1690": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1691": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "POP",
      "path": "7"
    },
    "1692": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "POP",
      "path": "7"
    },
    "1693": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "POP",
      "path": "7"
    },
    "1694": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "POP",
      "path": "7"
    },
    "1695": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1697": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1698": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1699": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1701": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "NOT",
      "path": "7"
    },
    "1702": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1704": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1705": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "ADD",
      "path": "7"
    },
    "1706": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "AND",
      "path": "7"
    },
    "1707": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1708": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "ADD",
      "path": "7"
    },
    "1709": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1710": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1712": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1713": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "POP",
      "path": "7"
    },
    "1714": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1715": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "ADD",
      "path": "7"
    },
    "1716": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1717": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x6C0"
    },
    "1721": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1722": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1723": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFAD"
    },
    "1727": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4972,
        5036
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1728": {
      "branch": 57,
      "fn": "SimpleSwap.supply",
      "offset": [
        4972,
        5036
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1729": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x6DF"
    },
    "1733": {
      "branch": 57,
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1734": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1736": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1737": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1743": {
      "op": "SHL"
    },
    "1744": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1745": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1746": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1748": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "ADD",
      "path": "7"
    },
    "1749": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "1753": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1754": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x11D1"
    },
    "1758": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        4964,
        5065
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1759": {
      "fn": "SimpleSwap.supply",
      "offset": [
        4964,
        5065
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1760": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 16,
      "value": "0x40"
    },
    "1762": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1763": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1772": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1779": {
      "op": "SHL"
    },
    "1780": {
      "op": "SUB"
    },
    "1781": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5100
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1782": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5100
      ],
      "op": "AND",
      "path": "7"
    },
    "1783": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5100
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1784": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5100
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "1789": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5100
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1790": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x711"
    },
    "1794": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1795": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5101,
        5111
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1796": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5101,
        5111
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1797": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5121,
        5125
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "1798": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5121,
        5125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1799": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5128,
        5146
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1800": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5128,
        5146
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1801": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1803": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "ADD",
      "path": "7"
    },
    "1804": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1074"
    },
    "1808": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        5083,
        5147
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1809": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1810": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1812": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1814": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1815": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1816": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1817": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "SUB",
      "path": "7"
    },
    "1818": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1819": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1821": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1822": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1823": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "1824": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1825": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1826": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1827": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x72C"
    },
    "1831": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1832": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1834": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1835": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1836": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1837": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "POP",
      "path": "7"
    },
    "1838": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "GAS",
      "path": "7"
    },
    "1839": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "CALL",
      "path": "7"
    },
    "1840": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1841": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1842": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1843": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x741"
    },
    "1847": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1848": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1849": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1851": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1852": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1853": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1854": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1856": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1857": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1858": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "POP",
      "path": "7"
    },
    "1859": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "POP",
      "path": "7"
    },
    "1860": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "POP",
      "path": "7"
    },
    "1861": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "POP",
      "path": "7"
    },
    "1862": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1864": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1865": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1866": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1868": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "NOT",
      "path": "7"
    },
    "1869": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1871": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1872": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "ADD",
      "path": "7"
    },
    "1873": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "AND",
      "path": "7"
    },
    "1874": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1875": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "ADD",
      "path": "7"
    },
    "1876": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1877": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1879": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1880": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "POP",
      "path": "7"
    },
    "1881": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1882": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "ADD",
      "path": "7"
    },
    "1883": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1884": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x767"
    },
    "1888": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1889": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1890": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFAD"
    },
    "1894": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        5083,
        5147
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1895": {
      "branch": 58,
      "fn": "SimpleSwap.supply",
      "offset": [
        5083,
        5147
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1896": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x4F0"
    },
    "1900": {
      "branch": 58,
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1901": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1903": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1910": {
      "op": "SHL"
    },
    "1911": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1912": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1913": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1915": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "ADD",
      "path": "7"
    },
    "1916": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "1920": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1921": {
      "fn": "SimpleSwap.supply",
      "offset": [
        5075,
        5176
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x119A"
    },
    "1925": {
      "fn": "SimpleSwap.supply",
      "jump": "i",
      "offset": [
        5075,
        5176
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1926": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1927": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2863,
        2880
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x7"
    },
    "1929": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2863,
        2880
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1930": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2863,
        2880
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1932": {
      "branch": 59,
      "fn": "SimpleSwap.swap",
      "offset": [
        2863,
        2880
      ],
      "op": "AND",
      "path": "7"
    },
    "1933": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x7AB"
    },
    "1937": {
      "branch": 59,
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1938": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1940": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1947": {
      "op": "SHL"
    },
    "1948": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1949": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1950": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1952": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "ADD",
      "path": "7"
    },
    "1953": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "1957": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1958": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x123D"
    },
    "1962": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        2855,
        2922
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1963": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2855,
        2922
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1964": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2960,
        2961
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 18,
      "value": "0x0"
    },
    "1966": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2940,
        2957
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1967": {
      "branch": 60,
      "fn": "SimpleSwap.swap",
      "offset": [
        2940,
        2961
      ],
      "op": "GT",
      "path": "7"
    },
    "1968": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x7CE"
    },
    "1972": {
      "branch": 60,
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1973": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1975": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1982": {
      "op": "SHL"
    },
    "1983": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1984": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1985": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1987": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "ADD",
      "path": "7"
    },
    "1988": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "1992": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1993": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x10B1"
    },
    "1997": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        2932,
        3018
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1998": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2932,
        3018
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1999": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3028,
        3056
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2001": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3059,
        3115
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x7DC"
    },
    "2005": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3083,
        3100
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2006": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3102,
        3114
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2007": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3059,
        3082
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE38"
    },
    "2011": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3059,
        3115
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2012": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3059,
        3115
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2013": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3028,
        3115
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2014": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3028,
        3115
      ],
      "op": "POP",
      "path": "7"
    },
    "2015": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3157,
        3180
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 19
    },
    "2016": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3133,
        3153
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2017": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3133,
        3180
      ],
      "op": "LT",
      "path": "7"
    },
    "2018": {
      "branch": 61,
      "fn": "SimpleSwap.swap",
      "offset": [
        3133,
        3180
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2019": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x801"
    },
    "2023": {
      "branch": 61,
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2024": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2026": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2033": {
      "op": "SHL"
    },
    "2034": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2035": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2036": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2038": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "ADD",
      "path": "7"
    },
    "2039": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "2043": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2044": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1399"
    },
    "2048": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3125,
        3238
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2049": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3125,
        3238
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2050": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3249,
        3265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2052": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3249,
        3265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2053": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3249,
        3265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2054": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3320
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2055": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2057": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2058": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "GT",
      "path": "7"
    },
    "2059": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2060": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x826"
    },
    "2064": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2065": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2072": {
      "op": "SHL"
    },
    "2073": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2075": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2076": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x21"
    },
    "2078": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2080": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2081": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "2083": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2085": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2086": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2087": {
      "branch": 62,
      "fn": "SimpleSwap.swap",
      "offset": [
        3308,
        3334
      ],
      "op": "EQ",
      "path": "7"
    },
    "2088": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3304,
        3871
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2089": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3304,
        3871
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x86C"
    },
    "2093": {
      "branch": 62,
      "fn": "SimpleSwap.swap",
      "offset": [
        3304,
        3871
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2094": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3372,
        3390
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0x3"
    },
    "2096": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3372,
        3390
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2097": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3372,
        3413
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x83C"
    },
    "2101": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3372,
        3413
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2102": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3395,
        3412
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2103": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3372,
        3394
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE2A"
    },
    "2107": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3372,
        3413
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2108": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3372,
        3413
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2109": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3350,
        3368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2111": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3350,
        3413
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2112": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3448,
        3466
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 21,
      "value": "0x4"
    },
    "2114": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3448,
        3466
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2115": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3448,
        3492
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x84E"
    },
    "2119": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3448,
        3492
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2120": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3471,
        3491
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2121": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3448,
        3470
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE1C"
    },
    "2125": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3448,
        3492
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2126": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3448,
        3492
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2127": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3427,
        3445
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2129": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3427,
        3492
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2130": {
      "op": "POP"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3526,
        3537
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 22,
      "value": "0x1"
    },
    "2134": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3526,
        3537
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2135": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3573,
        3584
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 23,
      "value": "0x2"
    },
    "2137": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3573,
        3584
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2144": {
      "op": "SHL"
    },
    "2145": {
      "op": "SUB"
    },
    "2146": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3526,
        3537
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2147": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3526,
        3537
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2148": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3526,
        3537
      ],
      "op": "AND",
      "path": "7"
    },
    "2149": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3526,
        3537
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2150": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3573,
        3584
      ],
      "op": "AND",
      "path": "7"
    },
    "2151": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3304,
        3871
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x8A6"
    },
    "2155": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3304,
        3871
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2156": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3304,
        3871
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2157": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3646,
        3664
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 24,
      "value": "0x3"
    },
    "2159": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3646,
        3664
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2160": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3646,
        3690
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x87B"
    },
    "2164": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3646,
        3690
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2165": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3669,
        3689
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2166": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3646,
        3668
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE1C"
    },
    "2170": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3646,
        3690
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2171": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3646,
        3690
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2172": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3625,
        3643
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2174": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3625,
        3690
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2175": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3725,
        3743
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 25,
      "value": "0x4"
    },
    "2177": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3725,
        3743
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2178": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3725,
        3766
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x88D"
    },
    "2182": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3725,
        3766
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2183": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3748,
        3765
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2184": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3725,
        3747
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE2A"
    },
    "2188": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3725,
        3766
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2189": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3725,
        3766
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2190": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3704,
        3722
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2192": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3704,
        3766
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2193": {
      "op": "POP"
    },
    "2194": {
      "op": "POP"
    },
    "2195": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3800,
        3811
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x2"
    },
    "2197": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3800,
        3811
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2198": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3800,
        3811
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2200": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3848,
        3859
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 27
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2207": {
      "op": "SHL"
    },
    "2208": {
      "op": "SUB"
    },
    "2209": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3800,
        3811
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2210": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3800,
        3811
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2211": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3800,
        3811
      ],
      "op": "AND",
      "path": "7"
    },
    "2212": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3800,
        3811
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2213": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3848,
        3859
      ],
      "op": "AND",
      "path": "7"
    },
    "2214": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3304,
        3871
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2215": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 28,
      "value": "0x40"
    },
    "2217": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2218": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2227": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "op": "SUB"
    },
    "2236": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3908
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2237": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3908
      ],
      "op": "AND",
      "path": "7"
    },
    "2238": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3908
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2239": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3908
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "2244": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3908
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2245": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x8D6"
    },
    "2249": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2250": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3909,
        3919
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2251": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3909,
        3919
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2252": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3921,
        3941
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2253": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3921,
        3941
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2254": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2256": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "ADD",
      "path": "7"
    },
    "2257": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1098"
    },
    "2261": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3888,
        3942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2262": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2263": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2265": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2267": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2268": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2269": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2270": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "SUB",
      "path": "7"
    },
    "2271": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2272": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2274": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2275": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2276": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "2277": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2278": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2279": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2280": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x8F1"
    },
    "2284": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2285": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2287": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2288": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2289": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2290": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "POP",
      "path": "7"
    },
    "2291": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "GAS",
      "path": "7"
    },
    "2292": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "CALL",
      "path": "7"
    },
    "2293": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2294": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2295": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2296": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x906"
    },
    "2300": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2301": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2302": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2304": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2305": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2306": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2307": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2309": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2310": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2311": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "POP",
      "path": "7"
    },
    "2312": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "POP",
      "path": "7"
    },
    "2313": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "POP",
      "path": "7"
    },
    "2314": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "POP",
      "path": "7"
    },
    "2315": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2317": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2318": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2319": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2321": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "NOT",
      "path": "7"
    },
    "2322": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2324": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2325": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "ADD",
      "path": "7"
    },
    "2326": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "AND",
      "path": "7"
    },
    "2327": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2328": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "ADD",
      "path": "7"
    },
    "2329": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2330": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2332": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2333": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "POP",
      "path": "7"
    },
    "2334": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2335": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "ADD",
      "path": "7"
    },
    "2336": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2337": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x92C"
    },
    "2341": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2342": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2343": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFAD"
    },
    "2347": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3888,
        3942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2348": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3888,
        3942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2349": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x947"
    },
    "2353": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2354": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2364": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2365": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2367": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2369": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2370": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "2372": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2374": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2375": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3881,
        3943
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2376": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 29,
      "value": "0x40"
    },
    "2378": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2379": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2386": {
      "op": "SHL"
    },
    "2387": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2388": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2395": {
      "op": "SHL"
    },
    "2396": {
      "op": "SUB"
    },
    "2397": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        3983
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2398": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        3983
      ],
      "op": "AND",
      "path": "7"
    },
    "2399": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        3983
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2400": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        3983
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "2405": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        3983
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2406": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x979"
    },
    "2410": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2411": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3984,
        3994
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2412": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3984,
        3994
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2413": {
      "fn": "SimpleSwap.swap",
      "offset": [
        4004,
        4008
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "2414": {
      "fn": "SimpleSwap.swap",
      "offset": [
        4004,
        4008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2415": {
      "fn": "SimpleSwap.swap",
      "offset": [
        4011,
        4028
      ],
      "op": "DUP12",
      "path": "7"
    },
    "2416": {
      "fn": "SimpleSwap.swap",
      "offset": [
        4011,
        4028
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2417": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2419": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "ADD",
      "path": "7"
    },
    "2420": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1074"
    },
    "2424": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3961,
        4029
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2425": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2426": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2428": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2430": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2431": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2432": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2433": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "SUB",
      "path": "7"
    },
    "2434": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2435": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2437": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2438": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2439": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "2440": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2441": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2442": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2443": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x994"
    },
    "2447": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2448": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2450": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2451": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2452": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2453": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "POP",
      "path": "7"
    },
    "2454": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "GAS",
      "path": "7"
    },
    "2455": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "CALL",
      "path": "7"
    },
    "2456": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2457": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2458": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2459": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x9A9"
    },
    "2463": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2464": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2465": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2467": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2468": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2469": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2470": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2472": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2473": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2474": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "POP",
      "path": "7"
    },
    "2475": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "POP",
      "path": "7"
    },
    "2476": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "POP",
      "path": "7"
    },
    "2477": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "POP",
      "path": "7"
    },
    "2478": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2480": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2481": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2482": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2484": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "NOT",
      "path": "7"
    },
    "2485": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2487": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2488": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "ADD",
      "path": "7"
    },
    "2489": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "AND",
      "path": "7"
    },
    "2490": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2491": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "ADD",
      "path": "7"
    },
    "2492": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2493": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2495": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2496": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "POP",
      "path": "7"
    },
    "2497": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2498": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "ADD",
      "path": "7"
    },
    "2499": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2500": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x9CF"
    },
    "2504": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2505": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2506": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFAD"
    },
    "2510": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3961,
        4029
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2511": {
      "branch": 63,
      "fn": "SimpleSwap.swap",
      "offset": [
        3961,
        4029
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2512": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x9EE"
    },
    "2516": {
      "branch": 63,
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2517": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2519": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2526": {
      "op": "SHL"
    },
    "2527": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2528": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2529": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2531": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "ADD",
      "path": "7"
    },
    "2532": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "2536": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2537": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1282"
    },
    "2541": {
      "fn": "SimpleSwap.swap",
      "jump": "i",
      "offset": [
        3953,
        4090
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2542": {
      "fn": "SimpleSwap.swap",
      "offset": [
        3953,
        4090
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2543": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "POP",
      "path": "7"
    },
    "2544": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "POP",
      "path": "7"
    },
    "2545": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "POP",
      "path": "7"
    },
    "2546": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "POP",
      "path": "7"
    },
    "2547": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "POP",
      "path": "7"
    },
    "2548": {
      "fn": "SimpleSwap.swap",
      "offset": [
        2744,
        4097
      ],
      "op": "POP",
      "path": "7"
    },
    "2549": {
      "fn": "SimpleSwap.swap",
      "jump": "o",
      "offset": [
        2744,
        4097
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2550": {
      "offset": [
        1624,
        1661
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2551": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2553": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2554": {
      "fn": "SimpleSwap.swap",
      "offset": [
        1624,
        1661
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2555": {
      "fn": "SimpleSwap.swap",
      "jump": "o",
      "offset": [
        1624,
        1661
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2556": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2557": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7094,
        7101
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2559": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7103,
        7110
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2560": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7185
      ],
      "op": "PUSH3",
      "path": "7",
      "statement": 30,
      "value": "0xA20"
    },
    "2564": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7171,
        7184
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2566": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7171,
        7184
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2567": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7166
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2E0"
    },
    "2571": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7158,
        7165
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "2575": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2577": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7153
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2578": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7157
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xDF9"
    },
    "2582": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7157
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2583": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7166
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2584": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7166
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2585": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7166
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "2590": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7166
      ],
      "op": "AND",
      "path": "7"
    },
    "2591": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "jump": "i",
      "offset": [
        7135,
        7166
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2592": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7135,
        7185
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2593": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7237
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xA41"
    },
    "2597": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7223,
        7236
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2599": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7223,
        7236
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2600": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7218
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2E0"
    },
    "2604": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7210,
        7217
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "2608": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2610": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7205
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2611": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7209
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xDF9"
    },
    "2615": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7209
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2616": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7218
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2617": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7218
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2618": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7218
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "2623": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7218
      ],
      "op": "AND",
      "path": "7"
    },
    "2624": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "jump": "i",
      "offset": [
        7187,
        7218
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2625": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7187,
        7237
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2626": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7127,
        7238
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2627": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7127,
        7238
      ],
      "op": "POP",
      "path": "7"
    },
    "2628": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7127,
        7238
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2629": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7127,
        7238
      ],
      "op": "POP",
      "path": "7"
    },
    "2630": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2631": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "offset": [
        7047,
        7245
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2632": {
      "fn": "SimpleSwap.getLpTokenPrice",
      "jump": "o",
      "offset": [
        7047,
        7245
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2633": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2634": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xA53"
    },
    "2638": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF22"
    },
    "2642": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2643": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "2653": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xA66"
    },
    "2657": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xAA3"
    },
    "2661": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2662": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2669": {
      "op": "SHL"
    },
    "2670": {
      "op": "SUB"
    },
    "2671": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "2672": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2673": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xA8F"
    },
    "2677": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2681": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2687": {
      "op": "SHL"
    },
    "2688": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2692": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2693": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1E0"
    },
    "2697": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2698": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x132F"
    },
    "2702": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2703": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2704": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 31,
      "value": "0xA9B"
    },
    "2708": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2710": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF26"
    },
    "2714": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2715": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2716": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2717": {
      "offset": [
        1748,
        1781
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2718": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1748,
        1781
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2720": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1748,
        1781
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1748,
        1781
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2722": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1748,
        1781
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2723": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2724": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2726": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 32
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2733": {
      "op": "SHL"
    },
    "2734": {
      "op": "SUB"
    },
    "2735": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2736": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2737": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2738": {
      "offset": [
        1686,
        1723
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2739": {
      "fn": "Ownable.owner",
      "offset": [
        1686,
        1723
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2741": {
      "fn": "Ownable.owner",
      "offset": [
        1686,
        1723
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2742": {
      "fn": "Ownable.owner",
      "offset": [
        1686,
        1723
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2743": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1686,
        1723
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2744": {
      "offset": [
        1811,
        1843
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2745": {
      "fn": "Ownable.owner",
      "offset": [
        1811,
        1843
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2747": {
      "fn": "Ownable.owner",
      "offset": [
        1811,
        1843
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2748": {
      "fn": "Ownable.owner",
      "offset": [
        1811,
        1843
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2749": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1811,
        1843
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2750": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2751": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xAC8"
    },
    "2755": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF22"
    },
    "2759": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2760": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "op": "SUB"
    },
    "2769": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "2770": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xADB"
    },
    "2774": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xAA3"
    },
    "2778": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2779": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2786": {
      "op": "SHL"
    },
    "2787": {
      "op": "SUB"
    },
    "2788": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "2789": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2790": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB04"
    },
    "2794": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2795": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2797": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2804": {
      "op": "SHL"
    },
    "2805": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2806": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2807": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2809": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2810": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1E0"
    },
    "2814": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2815": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x132F"
    },
    "2819": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2820": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2821": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2050,
        2067
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x7"
    },
    "2823": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2050,
        2067
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2824": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2050,
        2067
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2826": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2050,
        2067
      ],
      "op": "AND",
      "path": "7"
    },
    "2827": {
      "branch": 64,
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2049,
        2067
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2828": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xB2A"
    },
    "2832": {
      "branch": 64,
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2833": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2835": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2836": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2842": {
      "op": "SHL"
    },
    "2843": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2844": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2845": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2847": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "ADD",
      "path": "7"
    },
    "2848": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "2852": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2853": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1364"
    },
    "2857": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2041,
        2104
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2858": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2041,
        2104
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2859": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2114,
        2131
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 34,
      "value": "0x7"
    },
    "2861": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2114,
        2138
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2862": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2114,
        2138
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2865": {
      "op": "NOT"
    },
    "2866": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2114,
        2138
      ],
      "op": "AND",
      "path": "7"
    },
    "2867": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2134,
        2138
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2869": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2114,
        2138
      ],
      "op": "OR",
      "path": "7"
    },
    "2870": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2114,
        2138
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2871": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2114,
        2138
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2872": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 35,
      "value": "0x40"
    },
    "2874": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2875": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2185,
        2189
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "2876": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2185,
        2189
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2877": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xB47"
    },
    "2881": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2882": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF76"
    },
    "2886": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2160,
        2191
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2887": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2888": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xB53"
    },
    "2892": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2893": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2894": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1060"
    },
    "2898": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2160,
        2191
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2899": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2900": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2902": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2903": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2904": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2905": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "SUB",
      "path": "7"
    },
    "2906": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2907": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2909": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "CREATE",
      "path": "7"
    },
    "2910": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2911": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2912": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2913": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2914": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xB70"
    },
    "2918": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2919": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2920": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2922": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2923": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2924": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2925": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2927": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2928": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2160,
        2191
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2929": {
      "op": "POP"
    },
    "2930": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2157
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2932": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2933": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2934": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2941": {
      "op": "SHL"
    },
    "2942": {
      "op": "SUB"
    },
    "2943": {
      "op": "NOT"
    },
    "2944": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "AND",
      "path": "7"
    },
    "2945": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2954": {
      "op": "SHL"
    },
    "2955": {
      "op": "SUB"
    },
    "2956": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2957": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2958": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "AND",
      "path": "7"
    },
    "2959": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "MUL",
      "path": "7"
    },
    "2960": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "OR",
      "path": "7"
    },
    "2961": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2962": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2149,
        2191
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2965": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2223,
        2234
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2966": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2266,
        2277
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2968": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2266,
        2277
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2969": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 36,
      "value": "0x40"
    },
    "2971": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2972": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2981": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2982": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2223,
        2234
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2983": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2223,
        2234
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2984": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2223,
        2234
      ],
      "op": "AND",
      "path": "7"
    },
    "2985": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2223,
        2234
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2986": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2266,
        2277
      ],
      "op": "AND",
      "path": "7"
    },
    "2987": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2266,
        2277
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2988": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2223,
        2234
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2989": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2223,
        2234
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2990": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2314
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "2995": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2314
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2996": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xBC7"
    },
    "3000": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3001": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2315,
        2325
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3002": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2315,
        2325
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3003": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2335,
        2339
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "3004": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2335,
        2339
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3005": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2342,
        2360
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3006": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2342,
        2360
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3007": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3009": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "ADD",
      "path": "7"
    },
    "3010": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1074"
    },
    "3014": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2297,
        2361
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3015": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3016": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3018": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3020": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3021": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3022": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3023": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "SUB",
      "path": "7"
    },
    "3024": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3025": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3027": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3028": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3029": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "3030": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3031": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3032": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3033": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xBE2"
    },
    "3037": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3038": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3040": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3041": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3042": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3043": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "POP",
      "path": "7"
    },
    "3044": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "GAS",
      "path": "7"
    },
    "3045": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "CALL",
      "path": "7"
    },
    "3046": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3047": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3048": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3049": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xBF7"
    },
    "3053": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3054": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3055": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3057": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3058": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3059": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3060": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3062": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3063": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3064": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "POP",
      "path": "7"
    },
    "3065": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "POP",
      "path": "7"
    },
    "3066": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "POP",
      "path": "7"
    },
    "3067": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "POP",
      "path": "7"
    },
    "3068": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3070": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3071": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3072": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3074": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "NOT",
      "path": "7"
    },
    "3075": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3077": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3078": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "ADD",
      "path": "7"
    },
    "3079": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "AND",
      "path": "7"
    },
    "3080": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3081": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "ADD",
      "path": "7"
    },
    "3082": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3083": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3085": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3086": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "POP",
      "path": "7"
    },
    "3087": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3088": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "ADD",
      "path": "7"
    },
    "3089": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3090": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xC1D"
    },
    "3094": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3095": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3096": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFAD"
    },
    "3100": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2297,
        2361
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3101": {
      "branch": 65,
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2297,
        2361
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3102": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xC3C"
    },
    "3106": {
      "branch": 65,
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3107": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3109": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3110": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3118": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3119": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3121": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "ADD",
      "path": "7"
    },
    "3122": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "3126": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3127": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x11D1"
    },
    "3131": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2289,
        2390
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3132": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2289,
        2390
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3133": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 37,
      "value": "0x40"
    },
    "3135": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3136": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3143": {
      "op": "SHL"
    },
    "3144": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3145": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "op": "SUB"
    },
    "3154": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2425
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3155": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2425
      ],
      "op": "AND",
      "path": "7"
    },
    "3156": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2425
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3157": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2425
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "3162": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2425
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3163": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xC6E"
    },
    "3167": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3168": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2426,
        2436
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3169": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2426,
        2436
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3170": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2446,
        2450
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "3171": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2446,
        2450
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3172": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2453,
        2471
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3173": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2453,
        2471
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3174": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3176": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "ADD",
      "path": "7"
    },
    "3177": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1074"
    },
    "3181": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2408,
        2472
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3182": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3183": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3185": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3187": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3188": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3189": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3190": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "SUB",
      "path": "7"
    },
    "3191": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3192": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3194": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3195": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3196": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "3197": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3198": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3199": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3200": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xC89"
    },
    "3204": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3205": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3207": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3208": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3209": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3210": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "POP",
      "path": "7"
    },
    "3211": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "GAS",
      "path": "7"
    },
    "3212": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "CALL",
      "path": "7"
    },
    "3213": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3214": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3215": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3216": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xC9E"
    },
    "3220": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3221": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3222": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3224": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3225": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3226": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3227": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3229": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3230": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3231": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "POP",
      "path": "7"
    },
    "3232": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "POP",
      "path": "7"
    },
    "3233": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "POP",
      "path": "7"
    },
    "3234": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "POP",
      "path": "7"
    },
    "3235": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3237": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3238": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3239": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3241": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "NOT",
      "path": "7"
    },
    "3242": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3244": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3245": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "ADD",
      "path": "7"
    },
    "3246": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "AND",
      "path": "7"
    },
    "3247": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3248": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "ADD",
      "path": "7"
    },
    "3249": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3250": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3252": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3253": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "POP",
      "path": "7"
    },
    "3254": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3255": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "ADD",
      "path": "7"
    },
    "3256": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3257": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xCC4"
    },
    "3261": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3262": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3263": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFAD"
    },
    "3267": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2408,
        2472
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3268": {
      "branch": 66,
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2408,
        2472
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3269": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xCE3"
    },
    "3273": {
      "branch": 66,
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3274": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3276": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3283": {
      "op": "SHL"
    },
    "3284": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3285": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3286": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3288": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "ADD",
      "path": "7"
    },
    "3289": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1E0"
    },
    "3293": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3294": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x119A"
    },
    "3298": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2400,
        2501
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3299": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2400,
        2501
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3300": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2533,
        2551
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 38,
      "value": "0x3"
    },
    "3302": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2533,
        2551
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3303": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2533,
        2575
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xCF2"
    },
    "3307": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2533,
        2575
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3308": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2556,
        2574
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3309": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2533,
        2555
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE2A"
    },
    "3313": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2533,
        2575
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3314": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2533,
        2575
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3315": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2512,
        2530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3317": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2512,
        2575
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3318": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2606,
        2624
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 39,
      "value": "0x4"
    },
    "3320": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2606,
        2624
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3321": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2606,
        2648
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xD04"
    },
    "3325": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2606,
        2648
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3326": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2629,
        2647
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3327": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2606,
        2628
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE2A"
    },
    "3331": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2606,
        2648
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3332": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2606,
        2648
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3333": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2585,
        2603
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3335": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2585,
        2648
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3336": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2585,
        2648
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3337": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2585,
        2648
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3338": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2659,
        2672
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 40,
      "value": "0x5"
    },
    "3340": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2659,
        2693
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3341": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2659,
        2693
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3342": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2659,
        2693
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3343": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2711
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 41,
      "value": "0x7"
    },
    "3345": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2711
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3346": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3348": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3349": {
      "op": "PUSH4",
      "value": "0x140E25AD"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3356": {
      "op": "SHL"
    },
    "3357": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3358": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3359": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2711
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "3362": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2711
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3363": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2711
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3364": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2711
      ],
      "op": "DIV",
      "path": "7"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3371": {
      "op": "SHL"
    },
    "3372": {
      "op": "SUB"
    },
    "3373": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2711
      ],
      "op": "AND",
      "path": "7"
    },
    "3374": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2711
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3375": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2716
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA0712D68"
    },
    "3380": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2716
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3381": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xD42"
    },
    "3385": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3386": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2659,
        2693
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3387": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2659,
        2693
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3388": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "ADD",
      "path": "7"
    },
    "3389": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x13EE"
    },
    "3393": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "i",
      "offset": [
        2703,
        2731
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3394": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3395": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3397": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3399": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3400": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3401": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3402": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "SUB",
      "path": "7"
    },
    "3403": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3404": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3406": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3407": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3408": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "3409": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3410": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3411": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3412": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xD5D"
    },
    "3416": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3417": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3419": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3420": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3421": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3422": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "POP",
      "path": "7"
    },
    "3423": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "GAS",
      "path": "7"
    },
    "3424": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "CALL",
      "path": "7"
    },
    "3425": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3426": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3427": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3428": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xD72"
    },
    "3432": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3433": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3434": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3436": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3437": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3438": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3439": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3441": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3442": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3443": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "POP",
      "path": "7"
    },
    "3444": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "POP",
      "path": "7"
    },
    "3445": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "POP",
      "path": "7"
    },
    "3446": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        2703,
        2731
      ],
      "op": "POP",
      "path": "7"
    },
    "3447": {
      "offset": [
        1255,
        1256
      ],
      "op": "POP",
      "path": "0"
    },
    "3448": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1255,
        1256
      ],
      "op": "POP",
      "path": "0"
    },
    "3449": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "POP",
      "path": "7"
    },
    "3450": {
      "fn": "SimpleSwap.initiatePool",
      "offset": [
        1936,
        2738
      ],
      "op": "POP",
      "path": "7"
    },
    "3451": {
      "fn": "SimpleSwap.initiatePool",
      "jump": "o",
      "offset": [
        1936,
        2738
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3453": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD86"
    },
    "3457": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF22"
    },
    "3461": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3462": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3469": {
      "op": "SHL"
    },
    "3470": {
      "op": "SUB"
    },
    "3471": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "3472": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD99"
    },
    "3476": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xAA3"
    },
    "3480": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3481": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3488": {
      "op": "SHL"
    },
    "3489": {
      "op": "SUB"
    },
    "3490": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "3491": {
      "branch": 67,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3492": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xDC2"
    },
    "3496": {
      "branch": 67,
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3497": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3499": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3506": {
      "op": "SHL"
    },
    "3507": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3508": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3509": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3511": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3512": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1E0"
    },
    "3516": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3517": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x132F"
    },
    "3521": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3522": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3529": {
      "op": "SHL"
    },
    "3530": {
      "op": "SUB"
    },
    "3531": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 42
    },
    "3532": {
      "branch": 68,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "3533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xDEB"
    },
    "3537": {
      "branch": 68,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3541": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3547": {
      "op": "SHL"
    },
    "3548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "3553": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1E0"
    },
    "3557": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1105"
    },
    "3562": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3563": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 43,
      "value": "0xDF6"
    },
    "3568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF26"
    },
    "3573": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "3576": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3577": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3578": {
      "fn": "SafeMath.mul",
      "offset": [
        3440,
        3447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3580": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 44,
      "value": "0xE07"
    },
    "3584": {
      "fn": "SafeMath.mul",
      "offset": [
        3470,
        3471
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3585": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3467
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3586": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1441"
    },
    "3590": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3591": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3592": {
      "fn": "SafeMath.mul",
      "offset": [
        3459,
        3471
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3593": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3594": {
      "op": "POP"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "op": "POP"
    },
    "3597": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3598": {
      "fn": "SafeMath.div",
      "offset": [
        3767,
        3863
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3599": {
      "fn": "SafeMath.div",
      "offset": [
        3825,
        3832
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3601": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 45,
      "value": "0xE07"
    },
    "3605": {
      "fn": "SafeMath.div",
      "offset": [
        3855,
        3856
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3606": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3607": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1420"
    },
    "3611": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3612": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3613": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3615": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 46,
      "value": "0xE07"
    },
    "3619": {
      "fn": "SafeMath.sub",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3620": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3124
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3621": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1463"
    },
    "3625": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3626": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3627": {
      "fn": "SafeMath.add",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3629": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 47,
      "value": "0xE07"
    },
    "3633": {
      "fn": "SafeMath.add",
      "offset": [
        2760,
        2761
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3634": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2757
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3635": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1405"
    },
    "3639": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3640": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6478,
        7041
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3641": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6579,
        6586
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3643": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6579,
        6586
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3644": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6579,
        6586
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3645": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6627
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3646": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3648": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3649": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "GT",
      "path": "7"
    },
    "3650": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3651": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE5D"
    },
    "3655": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3656": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3663": {
      "op": "SHL"
    },
    "3664": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3666": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3667": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x21"
    },
    "3669": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3671": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3672": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3674": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3676": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3677": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3678": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6615,
        6641
      ],
      "op": "EQ",
      "path": "7"
    },
    "3679": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6614,
        6684
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE6C"
    },
    "3683": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6614,
        6684
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3684": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6666,
        6684
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3686": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6666,
        6684
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3687": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6614,
        6684
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE70"
    },
    "3691": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6614,
        6684
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3692": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6614,
        6684
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3693": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6645,
        6663
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3695": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6645,
        6663
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3696": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6614,
        6684
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3697": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6602,
        6684
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3698": {
      "op": "POP"
    },
    "3699": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6694,
        6703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3701": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6694,
        6703
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3702": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6719
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3703": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3705": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3706": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "GT",
      "path": "7"
    },
    "3707": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3708": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE96"
    },
    "3712": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3713": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3723": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3724": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x21"
    },
    "3726": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3728": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3729": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3731": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3733": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3734": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3735": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6707,
        6733
      ],
      "op": "EQ",
      "path": "7"
    },
    "3736": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6706,
        6776
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xEA5"
    },
    "3740": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6706,
        6776
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3741": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6758,
        6776
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3743": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6758,
        6776
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3744": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6706,
        6776
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xEA9"
    },
    "3748": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6706,
        6776
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3749": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6706,
        6776
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3750": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6737,
        6755
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3752": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6737,
        6755
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3753": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6706,
        6776
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3754": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6694,
        6776
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3755": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6694,
        6776
      ],
      "op": "POP",
      "path": "7"
    },
    "3756": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6787,
        6796
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3758": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6841
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xEC6"
    },
    "3762": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6822,
        6840
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3764": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6822,
        6840
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3765": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6817
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3767": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6817
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3768": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6821
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xDF9"
    },
    "3772": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6821
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3773": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6841
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3774": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6841
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3775": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6841
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "3780": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6841
      ],
      "op": "AND",
      "path": "7"
    },
    "3781": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "jump": "i",
      "offset": [
        6799,
        6841
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3782": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6799,
        6841
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3783": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6787,
        6841
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3784": {
      "op": "POP"
    },
    "3785": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6874,
        6903
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3787": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6906,
        6943
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xEEE"
    },
    "3791": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6912,
        6942
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xEE6"
    },
    "3795": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6918,
        6941
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xEDE"
    },
    "3799": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6918,
        6919
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3800": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6924,
        6940
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3801": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6918,
        6923
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE2A"
    },
    "3805": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "jump": "i",
      "offset": [
        6918,
        6941
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3806": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6918,
        6941
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3807": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6912,
        6913
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3808": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6912,
        6913
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3809": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6912,
        6917
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE0E"
    },
    "3813": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "jump": "i",
      "offset": [
        6912,
        6942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3814": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6912,
        6942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3815": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6906,
        6907
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3816": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6906,
        6907
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3817": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6906,
        6911
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xE1C"
    },
    "3821": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "jump": "i",
      "offset": [
        6906,
        6943
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3822": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6906,
        6943
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3823": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6874,
        6943
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3824": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6874,
        6943
      ],
      "op": "POP",
      "path": "7"
    },
    "3825": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6981,
        7034
      ],
      "op": "PUSH3",
      "path": "7",
      "statement": 48,
      "value": "0xF17"
    },
    "3829": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        7026,
        7033
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "3833": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6981,
        7021
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x2E0"
    },
    "3837": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        7017,
        7020
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3839": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        7017,
        7020
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3840": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        7007,
        7014
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "3844": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        7007,
        7020
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF0F"
    },
    "3848": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        7007,
        7020
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3849": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        7007,
        7020
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3850": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        7007,
        7020
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x1463"
    },
    "3854": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "jump": "i",
      "offset": [
        7007,
        7020
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3855": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        7007,
        7020
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3856": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6981,
        7002
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3857": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6981,
        7002
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3858": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6981,
        7006
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xDF9"
    },
    "3862": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "jump": "i",
      "offset": [
        6981,
        7021
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3863": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6981,
        7034
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3864": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6974,
        7034
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "3865": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "offset": [
        6478,
        7041
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "3866": {
      "op": "POP"
    },
    "3867": {
      "op": "POP"
    },
    "3868": {
      "op": "POP"
    },
    "3869": {
      "op": "POP"
    },
    "3870": {
      "op": "POP"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "fn": "SimpleSwap.getAmountPurchasedToken",
      "jump": "o",
      "offset": [
        6478,
        7041
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3874": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3875": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 49
    },
    "3876": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3877": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3878": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3879": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3881": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3882": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3889": {
      "op": "SHL"
    },
    "3890": {
      "op": "SUB"
    },
    "3891": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 50
    },
    "3892": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3893": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3900": {
      "op": "SHL"
    },
    "3901": {
      "op": "SUB"
    },
    "3902": {
      "op": "NOT"
    },
    "3903": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3904": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3905": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3906": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "3907": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3908": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3909": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x40"
    },
    "3911": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3912": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3913": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3914": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3915": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "3916": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3917": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3918": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3919": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3952": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3953": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3954": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3955": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3956": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3957": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3958": {
      "op": "JUMPDEST"
    },
    "3959": {
      "op": "PUSH2",
      "value": "0xFB1"
    },
    "3962": {
      "op": "DUP1"
    },
    "3963": {
      "op": "PUSH3",
      "value": "0x1494"
    },
    "3967": {
      "op": "DUP4"
    },
    "3968": {
      "op": "CODECOPY"
    },
    "3969": {
      "op": "ADD"
    },
    "3970": {
      "op": "SWAP1"
    },
    "3971": {
      "jump": "o",
      "op": "JUMP"
    },
    "3972": {
      "op": "JUMPDEST"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3977": {
      "op": "DUP3"
    },
    "3978": {
      "op": "DUP5"
    },
    "3979": {
      "op": "SUB"
    },
    "3980": {
      "op": "SLT"
    },
    "3981": {
      "op": "ISZERO"
    },
    "3982": {
      "op": "PUSH3",
      "value": "0xF96"
    },
    "3986": {
      "op": "JUMPI"
    },
    "3987": {
      "op": "DUP1"
    },
    "3988": {
      "op": "DUP2"
    },
    "3989": {
      "op": "REVERT"
    },
    "3990": {
      "op": "JUMPDEST"
    },
    "3991": {
      "op": "DUP2"
    },
    "3992": {
      "op": "CALLDATALOAD"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3999": {
      "op": "SHL"
    },
    "4000": {
      "op": "SUB"
    },
    "4001": {
      "op": "DUP2"
    },
    "4002": {
      "op": "AND"
    },
    "4003": {
      "op": "DUP2"
    },
    "4004": {
      "op": "EQ"
    },
    "4005": {
      "op": "PUSH3",
      "value": "0xE07"
    },
    "4009": {
      "op": "JUMPI"
    },
    "4010": {
      "op": "DUP2"
    },
    "4011": {
      "op": "DUP3"
    },
    "4012": {
      "op": "REVERT"
    },
    "4013": {
      "op": "JUMPDEST"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4018": {
      "op": "DUP3"
    },
    "4019": {
      "op": "DUP5"
    },
    "4020": {
      "op": "SUB"
    },
    "4021": {
      "op": "SLT"
    },
    "4022": {
      "op": "ISZERO"
    },
    "4023": {
      "op": "PUSH3",
      "value": "0xFBF"
    },
    "4027": {
      "op": "JUMPI"
    },
    "4028": {
      "op": "DUP1"
    },
    "4029": {
      "op": "DUP2"
    },
    "4030": {
      "op": "REVERT"
    },
    "4031": {
      "op": "JUMPDEST"
    },
    "4032": {
      "op": "DUP2"
    },
    "4033": {
      "op": "MLOAD"
    },
    "4034": {
      "op": "DUP1"
    },
    "4035": {
      "op": "ISZERO"
    },
    "4036": {
      "op": "ISZERO"
    },
    "4037": {
      "op": "DUP2"
    },
    "4038": {
      "op": "EQ"
    },
    "4039": {
      "op": "PUSH3",
      "value": "0xE07"
    },
    "4043": {
      "op": "JUMPI"
    },
    "4044": {
      "op": "DUP2"
    },
    "4045": {
      "op": "DUP3"
    },
    "4046": {
      "op": "REVERT"
    },
    "4047": {
      "op": "JUMPDEST"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4052": {
      "op": "DUP3"
    },
    "4053": {
      "op": "DUP5"
    },
    "4054": {
      "op": "SUB"
    },
    "4055": {
      "op": "SLT"
    },
    "4056": {
      "op": "ISZERO"
    },
    "4057": {
      "op": "PUSH3",
      "value": "0xFE1"
    },
    "4061": {
      "op": "JUMPI"
    },
    "4062": {
      "op": "DUP1"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "REVERT"
    },
    "4065": {
      "op": "JUMPDEST"
    },
    "4066": {
      "op": "POP"
    },
    "4067": {
      "op": "CALLDATALOAD"
    },
    "4068": {
      "op": "SWAP2"
    },
    "4069": {
      "op": "SWAP1"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "jump": "o",
      "op": "JUMP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4077": {
      "op": "DUP3"
    },
    "4078": {
      "op": "DUP5"
    },
    "4079": {
      "op": "SUB"
    },
    "4080": {
      "op": "SLT"
    },
    "4081": {
      "op": "ISZERO"
    },
    "4082": {
      "op": "PUSH3",
      "value": "0xFFA"
    },
    "4086": {
      "op": "JUMPI"
    },
    "4087": {
      "op": "DUP1"
    },
    "4088": {
      "op": "DUP2"
    },
    "4089": {
      "op": "REVERT"
    },
    "4090": {
      "op": "JUMPDEST"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "op": "MLOAD"
    },
    "4093": {
      "op": "SWAP2"
    },
    "4094": {
      "op": "SWAP1"
    },
    "4095": {
      "op": "POP"
    },
    "4096": {
      "jump": "o",
      "op": "JUMP"
    },
    "4097": {
      "op": "JUMPDEST"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4100": {
      "op": "DUP1"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4103": {
      "op": "DUP4"
    },
    "4104": {
      "op": "DUP6"
    },
    "4105": {
      "op": "SUB"
    },
    "4106": {
      "op": "SLT"
    },
    "4107": {
      "op": "ISZERO"
    },
    "4108": {
      "op": "PUSH3",
      "value": "0x1014"
    },
    "4112": {
      "op": "JUMPI"
    },
    "4113": {
      "op": "DUP1"
    },
    "4114": {
      "op": "DUP2"
    },
    "4115": {
      "op": "REVERT"
    },
    "4116": {
      "op": "JUMPDEST"
    },
    "4117": {
      "op": "POP"
    },
    "4118": {
      "op": "POP"
    },
    "4119": {
      "op": "DUP1"
    },
    "4120": {
      "op": "CALLDATALOAD"
    },
    "4121": {
      "op": "SWAP3"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4124": {
      "op": "SWAP1"
    },
    "4125": {
      "op": "SWAP2"
    },
    "4126": {
      "op": "ADD"
    },
    "4127": {
      "op": "CALLDATALOAD"
    },
    "4128": {
      "op": "SWAP2"
    },
    "4129": {
      "op": "POP"
    },
    "4130": {
      "jump": "o",
      "op": "JUMP"
    },
    "4131": {
      "op": "JUMPDEST"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4134": {
      "op": "DUP1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4139": {
      "op": "DUP5"
    },
    "4140": {
      "op": "DUP7"
    },
    "4141": {
      "op": "SUB"
    },
    "4142": {
      "op": "SLT"
    },
    "4143": {
      "op": "ISZERO"
    },
    "4144": {
      "op": "PUSH3",
      "value": "0x1038"
    },
    "4148": {
      "op": "JUMPI"
    },
    "4149": {
      "op": "DUP1"
    },
    "4150": {
      "op": "DUP2"
    },
    "4151": {
      "op": "REVERT"
    },
    "4152": {
      "op": "JUMPDEST"
    },
    "4153": {
      "op": "DUP4"
    },
    "4154": {
      "op": "CALLDATALOAD"
    },
    "4155": {
      "op": "SWAP3"
    },
    "4156": {
      "op": "POP"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4159": {
      "op": "DUP5"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "op": "CALLDATALOAD"
    },
    "4162": {
      "op": "SWAP2"
    },
    "4163": {
      "op": "POP"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4166": {
      "op": "DUP5"
    },
    "4167": {
      "op": "ADD"
    },
    "4168": {
      "op": "CALLDATALOAD"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4171": {
      "op": "DUP2"
    },
    "4172": {
      "op": "LT"
    },
    "4173": {
      "op": "PUSH3",
      "value": "0x1055"
    },
    "4177": {
      "op": "JUMPI"
    },
    "4178": {
      "op": "DUP2"
    },
    "4179": {
      "op": "DUP3"
    },
    "4180": {
      "op": "REVERT"
    },
    "4181": {
      "op": "JUMPDEST"
    },
    "4182": {
      "op": "DUP1"
    },
    "4183": {
      "op": "SWAP2"
    },
    "4184": {
      "op": "POP"
    },
    "4185": {
      "op": "POP"
    },
    "4186": {
      "op": "SWAP3"
    },
    "4187": {
      "op": "POP"
    },
    "4188": {
      "op": "SWAP3"
    },
    "4189": {
      "op": "POP"
    },
    "4190": {
      "op": "SWAP3"
    },
    "4191": {
      "jump": "o",
      "op": "JUMP"
    },
    "4192": {
      "op": "JUMPDEST"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4199": {
      "op": "SHL"
    },
    "4200": {
      "op": "SUB"
    },
    "4201": {
      "op": "SWAP2"
    },
    "4202": {
      "op": "SWAP1"
    },
    "4203": {
      "op": "SWAP2"
    },
    "4204": {
      "op": "AND"
    },
    "4205": {
      "op": "DUP2"
    },
    "4206": {
      "op": "MSTORE"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4209": {
      "op": "ADD"
    },
    "4210": {
      "op": "SWAP1"
    },
    "4211": {
      "jump": "o",
      "op": "JUMP"
    },
    "4212": {
      "op": "JUMPDEST"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4219": {
      "op": "SHL"
    },
    "4220": {
      "op": "SUB"
    },
    "4221": {
      "op": "SWAP4"
    },
    "4222": {
      "op": "DUP5"
    },
    "4223": {
      "op": "AND"
    },
    "4224": {
      "op": "DUP2"
    },
    "4225": {
      "op": "MSTORE"
    },
    "4226": {
      "op": "SWAP2"
    },
    "4227": {
      "op": "SWAP1"
    },
    "4228": {
      "op": "SWAP3"
    },
    "4229": {
      "op": "AND"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4232": {
      "op": "DUP3"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "op": "MSTORE"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4237": {
      "op": "DUP2"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "SWAP2"
    },
    "4240": {
      "op": "SWAP1"
    },
    "4241": {
      "op": "SWAP2"
    },
    "4242": {
      "op": "MSTORE"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4245": {
      "op": "ADD"
    },
    "4246": {
      "op": "SWAP1"
    },
    "4247": {
      "jump": "o",
      "op": "JUMP"
    },
    "4248": {
      "op": "JUMPDEST"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4255": {
      "op": "SHL"
    },
    "4256": {
      "op": "SUB"
    },
    "4257": {
      "op": "SWAP3"
    },
    "4258": {
      "op": "SWAP1"
    },
    "4259": {
      "op": "SWAP3"
    },
    "4260": {
      "op": "AND"
    },
    "4261": {
      "op": "DUP3"
    },
    "4262": {
      "op": "MSTORE"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4265": {
      "op": "DUP3"
    },
    "4266": {
      "op": "ADD"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "SWAP1"
    },
    "4272": {
      "jump": "o",
      "op": "JUMP"
    },
    "4273": {
      "op": "JUMPDEST"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4276": {
      "op": "DUP1"
    },
    "4277": {
      "op": "DUP3"
    },
    "4278": {
      "op": "MSTORE"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "4281": {
      "op": "SWAP1"
    },
    "4282": {
      "op": "DUP3"
    },
    "4283": {
      "op": "ADD"
    },
    "4284": {
      "op": "MSTORE"
    },
    "4285": {
      "op": "PUSH32",
      "value": "0x54686520616D6F756E7420746F2073656C6C2073686F756C6420626520737472"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4320": {
      "op": "DUP3"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "op": "MSTORE"
    },
    "4323": {
      "op": "PUSH20",
      "value": "0x34B1BA363C903134B3B3B2B9103A3430B7101817"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "4346": {
      "op": "SHL"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4349": {
      "op": "DUP3"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "MSTORE"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "op": "SWAP1"
    },
    "4356": {
      "jump": "o",
      "op": "JUMP"
    },
    "4357": {
      "op": "JUMPDEST"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4360": {
      "op": "DUP1"
    },
    "4361": {
      "op": "DUP3"
    },
    "4362": {
      "op": "MSTORE"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4365": {
      "op": "SWAP1"
    },
    "4366": {
      "op": "DUP3"
    },
    "4367": {
      "op": "ADD"
    },
    "4368": {
      "op": "MSTORE"
    },
    "4369": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4404": {
      "op": "DUP3"
    },
    "4405": {
      "op": "ADD"
    },
    "4406": {
      "op": "MSTORE"
    },
    "4407": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4416": {
      "op": "SHL"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4419": {
      "op": "DUP3"
    },
    "4420": {
      "op": "ADD"
    },
    "4421": {
      "op": "MSTORE"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4424": {
      "op": "ADD"
    },
    "4425": {
      "op": "SWAP1"
    },
    "4426": {
      "jump": "o",
      "op": "JUMP"
    },
    "4427": {
      "op": "JUMPDEST"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4430": {
      "op": "DUP1"
    },
    "4431": {
      "op": "DUP3"
    },
    "4432": {
      "op": "MSTORE"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "4435": {
      "op": "SWAP1"
    },
    "4436": {
      "op": "DUP3"
    },
    "4437": {
      "op": "ADD"
    },
    "4438": {
      "op": "MSTORE"
    },
    "4439": {
      "op": "PUSH32",
      "value": "0x54686520616D6F756E74206F6620737570706C696564206C7020746F6B656E73"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4474": {
      "op": "DUP3"
    },
    "4475": {
      "op": "ADD"
    },
    "4476": {
      "op": "MSTORE"
    },
    "4477": {
      "op": "PUSH15",
      "value": "0x1039B437BAB632103132901F101817"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4495": {
      "op": "SHL"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4498": {
      "op": "DUP3"
    },
    "4499": {
      "op": "ADD"
    },
    "4500": {
      "op": "MSTORE"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4503": {
      "op": "ADD"
    },
    "4504": {
      "op": "SWAP1"
    },
    "4505": {
      "jump": "o",
      "op": "JUMP"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4509": {
      "op": "DUP1"
    },
    "4510": {
      "op": "DUP3"
    },
    "4511": {
      "op": "MSTORE"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4514": {
      "op": "SWAP1"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "MSTORE"
    },
    "4518": {
      "op": "PUSH32",
      "value": "0x5553444320616D6F756E7420756E617661696C61626C652E0000000000000000"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4553": {
      "op": "DUP3"
    },
    "4554": {
      "op": "ADD"
    },
    "4555": {
      "op": "MSTORE"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4558": {
      "op": "ADD"
    },
    "4559": {
      "op": "SWAP1"
    },
    "4560": {
      "jump": "o",
      "op": "JUMP"
    },
    "4561": {
      "op": "JUMPDEST"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4564": {
      "op": "DUP1"
    },
    "4565": {
      "op": "DUP3"
    },
    "4566": {
      "op": "MSTORE"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4569": {
      "op": "SWAP1"
    },
    "4570": {
      "op": "DUP3"
    },
    "4571": {
      "op": "ADD"
    },
    "4572": {
      "op": "MSTORE"
    },
    "4573": {
      "op": "PUSH32",
      "value": "0x4C696E6B20616D6F756E7420756E617661696C61626C652E0000000000000000"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4608": {
      "op": "DUP3"
    },
    "4609": {
      "op": "ADD"
    },
    "4610": {
      "op": "MSTORE"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4613": {
      "op": "ADD"
    },
    "4614": {
      "op": "SWAP1"
    },
    "4615": {
      "jump": "o",
      "op": "JUMP"
    },
    "4616": {
      "op": "JUMPDEST"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4619": {
      "op": "DUP1"
    },
    "4620": {
      "op": "DUP3"
    },
    "4621": {
      "op": "MSTORE"
    },
    "4622": {
      "op": "DUP2"
    },
    "4623": {
      "op": "DUP2"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "MSTORE"
    },
    "4626": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F756768204C5020746F6B656E732E"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4661": {
      "op": "DUP3"
    },
    "4662": {
      "op": "ADD"
    },
    "4663": {
      "op": "MSTORE"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4666": {
      "op": "ADD"
    },
    "4667": {
      "op": "SWAP1"
    },
    "4668": {
      "jump": "o",
      "op": "JUMP"
    },
    "4669": {
      "op": "JUMPDEST"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4672": {
      "op": "DUP1"
    },
    "4673": {
      "op": "DUP3"
    },
    "4674": {
      "op": "MSTORE"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4677": {
      "op": "SWAP1"
    },
    "4678": {
      "op": "DUP3"
    },
    "4679": {
      "op": "ADD"
    },
    "4680": {
      "op": "MSTORE"
    },
    "4681": {
      "op": "PUSH32",
      "value": "0x54686520706F6F6C2073686F756C6420626520696E697469616C697A65642066"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4716": {
      "op": "DUP3"
    },
    "4717": {
      "op": "ADD"
    },
    "4718": {
      "op": "MSTORE"
    },
    "4719": {
      "op": "PUSH5",
      "value": "0x34B939BA17"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "4727": {
      "op": "SHL"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4730": {
      "op": "DUP3"
    },
    "4731": {
      "op": "ADD"
    },
    "4732": {
      "op": "MSTORE"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4735": {
      "op": "ADD"
    },
    "4736": {
      "op": "SWAP1"
    },
    "4737": {
      "jump": "o",
      "op": "JUMP"
    },
    "4738": {
      "op": "JUMPDEST"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4741": {
      "op": "DUP1"
    },
    "4742": {
      "op": "DUP3"
    },
    "4743": {
      "op": "MSTORE"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "4746": {
      "op": "SWAP1"
    },
    "4747": {
      "op": "DUP3"
    },
    "4748": {
      "op": "ADD"
    },
    "4749": {
      "op": "MSTORE"
    },
    "4750": {
      "op": "PUSH32",
      "value": "0x5472616E73666572206F662074686520616D6F756E74206F6620746F6B656E20"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4785": {
      "op": "DUP3"
    },
    "4786": {
      "op": "ADD"
    },
    "4787": {
      "op": "MSTORE"
    },
    "4788": {
      "op": "PUSH32",
      "value": "0x796F752077616E7420746F2073656C6C206661696C65642E0000000000000000"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4823": {
      "op": "DUP3"
    },
    "4824": {
      "op": "ADD"
    },
    "4825": {
      "op": "MSTORE"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4828": {
      "op": "ADD"
    },
    "4829": {
      "op": "SWAP1"
    },
    "4830": {
      "jump": "o",
      "op": "JUMP"
    },
    "4831": {
      "op": "JUMPDEST"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4834": {
      "op": "DUP1"
    },
    "4835": {
      "op": "DUP3"
    },
    "4836": {
      "op": "MSTORE"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "4839": {
      "op": "SWAP1"
    },
    "4840": {
      "op": "DUP3"
    },
    "4841": {
      "op": "ADD"
    },
    "4842": {
      "op": "MSTORE"
    },
    "4843": {
      "op": "PUSH32",
      "value": "0x54686520616D6F756E74206F6620726571756573746564206C7020746F6B656E"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4878": {
      "op": "DUP3"
    },
    "4879": {
      "op": "ADD"
    },
    "4880": {
      "op": "MSTORE"
    },
    "4881": {
      "op": "PUSH16",
      "value": "0x399039B437BAB632103132901F101817"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "4900": {
      "op": "SHL"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4903": {
      "op": "DUP3"
    },
    "4904": {
      "op": "ADD"
    },
    "4905": {
      "op": "MSTORE"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4908": {
      "op": "ADD"
    },
    "4909": {
      "op": "SWAP1"
    },
    "4910": {
      "jump": "o",
      "op": "JUMP"
    },
    "4911": {
      "op": "JUMPDEST"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4914": {
      "op": "DUP1"
    },
    "4915": {
      "op": "DUP3"
    },
    "4916": {
      "op": "MSTORE"
    },
    "4917": {
      "op": "DUP2"
    },
    "4918": {
      "op": "DUP2"
    },
    "4919": {
      "op": "ADD"
    },
    "4920": {
      "op": "MSTORE"
    },
    "4921": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4956": {
      "op": "DUP3"
    },
    "4957": {
      "op": "ADD"
    },
    "4958": {
      "op": "MSTORE"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4961": {
      "op": "ADD"
    },
    "4962": {
      "op": "SWAP1"
    },
    "4963": {
      "jump": "o",
      "op": "JUMP"
    },
    "4964": {
      "op": "JUMPDEST"
    },
    "4965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4967": {
      "op": "DUP1"
    },
    "4968": {
      "op": "DUP3"
    },
    "4969": {
      "op": "MSTORE"
    },
    "4970": {
      "op": "DUP2"
    },
    "4971": {
      "op": "DUP2"
    },
    "4972": {
      "op": "ADD"
    },
    "4973": {
      "op": "MSTORE"
    },
    "4974": {
      "op": "PUSH32",
      "value": "0x54686520706F6F6C2077617320616C726561647920696E697469616C697A6564"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5009": {
      "op": "DUP3"
    },
    "5010": {
      "op": "ADD"
    },
    "5011": {
      "op": "MSTORE"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5014": {
      "op": "ADD"
    },
    "5015": {
      "op": "SWAP1"
    },
    "5016": {
      "jump": "o",
      "op": "JUMP"
    },
    "5017": {
      "op": "JUMPDEST"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5020": {
      "op": "DUP1"
    },
    "5021": {
      "op": "DUP3"
    },
    "5022": {
      "op": "MSTORE"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "5025": {
      "op": "SWAP1"
    },
    "5026": {
      "op": "DUP3"
    },
    "5027": {
      "op": "ADD"
    },
    "5028": {
      "op": "MSTORE"
    },
    "5029": {
      "op": "PUSH32",
      "value": "0x54686520616D6F756E74206F662070757263686173656420746F6B656E206973"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5064": {
      "op": "DUP3"
    },
    "5065": {
      "op": "ADD"
    },
    "5066": {
      "op": "MSTORE"
    },
    "5067": {
      "op": "PUSH21",
      "value": "0x103637BBB2B9103A3430B7103932B8BAB4B932B217"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "5091": {
      "op": "SHL"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5094": {
      "op": "DUP3"
    },
    "5095": {
      "op": "ADD"
    },
    "5096": {
      "op": "MSTORE"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5099": {
      "op": "ADD"
    },
    "5100": {
      "op": "SWAP1"
    },
    "5101": {
      "jump": "o",
      "op": "JUMP"
    },
    "5102": {
      "op": "JUMPDEST"
    },
    "5103": {
      "op": "SWAP1"
    },
    "5104": {
      "op": "DUP2"
    },
    "5105": {
      "op": "MSTORE"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5108": {
      "op": "ADD"
    },
    "5109": {
      "op": "SWAP1"
    },
    "5110": {
      "jump": "o",
      "op": "JUMP"
    },
    "5111": {
      "op": "JUMPDEST"
    },
    "5112": {
      "op": "SWAP2"
    },
    "5113": {
      "op": "DUP3"
    },
    "5114": {
      "op": "MSTORE"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5117": {
      "op": "DUP3"
    },
    "5118": {
      "op": "ADD"
    },
    "5119": {
      "op": "MSTORE"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5122": {
      "op": "ADD"
    },
    "5123": {
      "op": "SWAP1"
    },
    "5124": {
      "jump": "o",
      "op": "JUMP"
    },
    "5125": {
      "op": "JUMPDEST"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5128": {
      "op": "DUP3"
    },
    "5129": {
      "op": "NOT"
    },
    "5130": {
      "op": "DUP3"
    },
    "5131": {
      "op": "GT"
    },
    "5132": {
      "op": "ISZERO"
    },
    "5133": {
      "op": "PUSH3",
      "value": "0x141B"
    },
    "5137": {
      "op": "JUMPI"
    },
    "5138": {
      "op": "PUSH3",
      "value": "0x141B"
    },
    "5142": {
      "op": "PUSH3",
      "value": "0x147D"
    },
    "5146": {
      "jump": "i",
      "op": "JUMP"
    },
    "5147": {
      "op": "JUMPDEST"
    },
    "5148": {
      "op": "POP"
    },
    "5149": {
      "op": "ADD"
    },
    "5150": {
      "op": "SWAP1"
    },
    "5151": {
      "jump": "o",
      "op": "JUMP"
    },
    "5152": {
      "op": "JUMPDEST"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5155": {
      "op": "DUP3"
    },
    "5156": {
      "op": "PUSH3",
      "value": "0x143C"
    },
    "5160": {
      "op": "JUMPI"
    },
    "5161": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5168": {
      "op": "SHL"
    },
    "5169": {
      "op": "DUP2"
    },
    "5170": {
      "op": "MSTORE"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5175": {
      "op": "MSTORE"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5178": {
      "op": "DUP2"
    },
    "5179": {
      "op": "REVERT"
    },
    "5180": {
      "op": "JUMPDEST"
    },
    "5181": {
      "op": "POP"
    },
    "5182": {
      "op": "DIV"
    },
    "5183": {
      "op": "SWAP1"
    },
    "5184": {
      "jump": "o",
      "op": "JUMP"
    },
    "5185": {
      "op": "JUMPDEST"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5188": {
      "op": "DUP2"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5191": {
      "op": "NOT"
    },
    "5192": {
      "op": "DIV"
    },
    "5193": {
      "op": "DUP4"
    },
    "5194": {
      "op": "GT"
    },
    "5195": {
      "op": "DUP3"
    },
    "5196": {
      "op": "ISZERO"
    },
    "5197": {
      "op": "ISZERO"
    },
    "5198": {
      "op": "AND"
    },
    "5199": {
      "op": "ISZERO"
    },
    "5200": {
      "op": "PUSH3",
      "value": "0x145E"
    },
    "5204": {
      "op": "JUMPI"
    },
    "5205": {
      "op": "PUSH3",
      "value": "0x145E"
    },
    "5209": {
      "op": "PUSH3",
      "value": "0x147D"
    },
    "5213": {
      "jump": "i",
      "op": "JUMP"
    },
    "5214": {
      "op": "JUMPDEST"
    },
    "5215": {
      "op": "POP"
    },
    "5216": {
      "op": "MUL"
    },
    "5217": {
      "op": "SWAP1"
    },
    "5218": {
      "jump": "o",
      "op": "JUMP"
    },
    "5219": {
      "op": "JUMPDEST"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5222": {
      "op": "DUP3"
    },
    "5223": {
      "op": "DUP3"
    },
    "5224": {
      "op": "LT"
    },
    "5225": {
      "op": "ISZERO"
    },
    "5226": {
      "op": "PUSH3",
      "value": "0x1478"
    },
    "5230": {
      "op": "JUMPI"
    },
    "5231": {
      "op": "PUSH3",
      "value": "0x1478"
    },
    "5235": {
      "op": "PUSH3",
      "value": "0x147D"
    },
    "5239": {
      "jump": "i",
      "op": "JUMP"
    },
    "5240": {
      "op": "JUMPDEST"
    },
    "5241": {
      "op": "POP"
    },
    "5242": {
      "op": "SUB"
    },
    "5243": {
      "op": "SWAP1"
    },
    "5244": {
      "jump": "o",
      "op": "JUMP"
    },
    "5245": {
      "op": "JUMPDEST"
    },
    "5246": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5253": {
      "op": "SHL"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5256": {
      "op": "MSTORE"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5261": {
      "op": "MSTORE"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5266": {
      "op": "REVERT"
    }
  },
  "sha1": "5e1269c5e2b3b099a4e214a67cea095dc6c496a0",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport  {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\n\ncontract LpSimpleSwap is ERC20, ERC20Burnable {\n    address parentAddress;\n\n   constructor(address _parentAddress) ERC20(\"Lp Simple Swap\", \"LpSimpleSwap\")  {\n        parentAddress = _parentAddress;\n    }\n\n    function mint(uint256 quantity) public onlyParent {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public override onlyParent {\n        burnFrom(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n\n    modifier onlyParent {\n        require(msg.sender == parentAddress);\n        _;\n    }\n}\n\n\ncontract SimpleSwap is Ownable{\n    using SafeMath for uint256;\n\n    enum Token{Link, USDC}\n\n    address addressLink = 0xa36085F69e2889c224210F603D836748e7dC0088;   //Kovan address      //0x01BE23585060835E02B77ef475b0Cc51aA1e0709; rinkeby\n    address addressUSDC = 0xb7a4F3E9097C08dA09517b5aB877F7a917224ede;    //Kovan address            //0xeb8f08a975Ab53E34D8a0330E0D34de942C95926; rinkeby\n\n    uint256 public totalAvailableLink = 0;      //18 decimals\n    uint256 public totalAvailableUSDC = 0;      //6 decimals\n\n    uint256  public totalLpTokens = 0;           //6 decimals\n\n    uint256 public FEE = 3 * 10 ** 3;         //6 decimals\n\n    bool isPoolInitialized = false;\n\n    LpSimpleSwap lpTokens;\n\n    function initiatePool(uint256 amountLinkToSupply, uint256 amountUsdcToSupply) public onlyOwner {\n        require(!isPoolInitialized, \"The pool was already initialized\");\n        isPoolInitialized = true;\n\n        lpTokens = new LpSimpleSwap(address(this));\n\n        IERC20 Link = IERC20(addressLink);\n        IERC20 USDC = IERC20(addressUSDC);\n\n        require(Link.transferFrom(msg.sender, address(this), amountLinkToSupply), \"Link amount unavailable.\");\n        require(USDC.transferFrom(msg.sender, address(this), amountUsdcToSupply), \"USDC amount unavailable.\");\n\n        totalAvailableLink = totalAvailableLink.add(amountLinkToSupply);\n        totalAvailableUSDC = totalAvailableUSDC.add(amountUsdcToSupply);\n\n        totalLpTokens = amountUsdcToSupply;\n        lpTokens.mint(totalLpTokens);\n    }\n\n    function swap(uint256 quantitySoldToken, uint256 minAmountPurchasedToken, Token tokenForSale) public {\n        require(isPoolInitialized, \"The pool should be initialized first.\");\n        require(quantitySoldToken > 0, \"The amount to sell should be strictly bigger than 0.\");\n        uint256 amountPurchasedToken = getAmountPurchasedToken(quantitySoldToken, tokenForSale);\n        require(amountPurchasedToken >= minAmountPurchasedToken, \"The amount of purchased token is lower than required.\");\n\n        IERC20 soldToken;\n        IERC20 boughtToken;\n\n        if (tokenForSale == Token.Link) {\n            totalAvailableLink  = totalAvailableLink.add(quantitySoldToken);\n            totalAvailableUSDC = totalAvailableUSDC.sub(amountPurchasedToken);\n\n            soldToken = IERC20(addressLink);\n            boughtToken = IERC20(addressUSDC);\n        }\n\n        else {\n            totalAvailableLink = totalAvailableLink.sub(amountPurchasedToken);\n            totalAvailableUSDC = totalAvailableUSDC.add(quantitySoldToken);\n\n            soldToken = IERC20(addressUSDC); \n            boughtToken = IERC20(addressLink);\n        }\n\n        assert(boughtToken.transfer(msg.sender, amountPurchasedToken));\n        require(soldToken.transferFrom(msg.sender, address(this), quantitySoldToken), \"Transfer of the amount of token you want to sell failed.\");\n    }\n\n    function supply(uint256 amountLpTokens) public {\n        require(isPoolInitialized, \"The pool should be initialized first.\");\n        require(amountLpTokens > 0, \"The amount of supplied lp tokens should be > 0.\");\n        (uint256 amountLinkPerLpToken, uint256 amountUsdcPerLpToken) = getLpTokenPrice();\n\n        IERC20 Link = IERC20(addressLink);\n        IERC20 USDC = IERC20(addressUSDC);\n\n        uint256 amountLinkToSupply = amountLinkPerLpToken.mul(amountLpTokens).div(10 ** 6); // 18 decimals\n        uint256 amountUSDCToSupply = amountUsdcPerLpToken.mul(amountLpTokens).div(10 ** 6); // 6 decimals\n\n        totalAvailableLink = totalAvailableLink.add(amountLinkToSupply);\n        totalAvailableUSDC = totalAvailableUSDC.add(amountUSDCToSupply);\n\n        totalLpTokens = totalLpTokens.add(amountLpTokens);\n\n        lpTokens.mint(amountLpTokens);\n\n        require(Link.transferFrom(msg.sender, address(this), amountLinkToSupply), \"Link amount unavailable.\");\n        require(USDC.transferFrom(msg.sender, address(this), amountUSDCToSupply), \"USDC amount unavailable.\");\n    }\n\n    function withdraw(uint256 amountLpTokens) public {\n        require(isPoolInitialized, \"The pool should be initialized first.\");\n        require(amountLpTokens > 0, \"The amount of requested lp tokens should be > 0.\");\n        require(lpTokens.balanceOf(msg.sender) >= amountLpTokens, \"You don't have enough LP tokens.\");\n        \n        (uint256 amountLinkPerLpToken, uint256 amountUSDCPerLpToken)  = getLpTokenPrice();\n\n        uint256 amountLinkToWithdraw = amountLinkPerLpToken.mul(amountLpTokens).div(10 ** 6);\n        uint256 amountUSDCToWithdraw = amountUSDCPerLpToken.mul(amountLpTokens).div(10 ** 6);\n\n        totalAvailableLink = totalAvailableLink.sub(amountLinkToWithdraw);\n        totalAvailableUSDC = totalAvailableUSDC.sub(amountUSDCToWithdraw);\n\n        totalLpTokens = totalLpTokens.sub(amountLpTokens);\n\n        lpTokens.burn(amountLpTokens);\n\n        IERC20 Link = IERC20(addressLink);\n        IERC20 USDC = IERC20(addressUSDC);\n\n        assert(Link.transfer(msg.sender, amountLinkToWithdraw));\n        assert(USDC.transfer(msg.sender, amountUSDCToWithdraw));\n    }\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Link - USDC                      // 6 decimals\n    function getAmountPurchasedToken(uint256 amountSoldTokens, Token tokenForSale) internal view returns(uint256)\n    {\n        uint256 y = (tokenForSale == Token.Link) ? totalAvailableUSDC : totalAvailableLink;\n        uint256 x = (tokenForSale == Token.Link) ? totalAvailableLink : totalAvailableUSDC;\n\n        uint256 C = totalAvailableUSDC.mul(totalAvailableLink);         // 24 decimals\n        uint256 amountPurchasedTokens = y.sub(C.div(x.add(amountSoldTokens))); // 6 or 18 decimals\n\n        return amountPurchasedTokens.mul(10 ** 6 - FEE).div(10 ** 6);\n    }\n\n    function getLpTokenPrice() public view returns(uint256, uint256) \n    {\n        return (totalAvailableLink.mul(10 ** 6).div(totalLpTokens), totalAvailableUSDC.mul(10 ** 6).div(totalLpTokens));\n    }\n}\n\n\n",
  "sourceMap": "1225:6022:7:-:0;;;1322:64;;;-1:-1:-1;;;;;;1322:64:7;;;1344:42;1322:64;;;;1469;;;;;;1491:42;1469:64;;;1322;1624:37;;;;1686;;;;1748:33;;1832:11;1811:32;;1871:30;;;-1:-1:-1;;1871:30:7;;;1225:6022;;;;;;;;;-1:-1:-1;867:23:0;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;1225:6022:7;;586:96:5;665:10;586:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;1225:6022:7:-;;;;;;;",
  "sourcePath": "contracts/SimpleSwap.sol",
  "type": "contract"
}